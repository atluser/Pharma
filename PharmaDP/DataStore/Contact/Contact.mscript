DataStoreObject {
	StringField ContactId{return null;}
	
	//-- Dati Anagrafici --
	StringField ContactName{return null;}
	StringField ContactLastName{return null;}
	
	//Relazione con Account Cliente
	StringField RelAccountCode{return null;}
	//StringField RelAccountName{return vObjUtil.getAccountName(RelAccountCode);}
	
	StringField ContactTitle{return null;}
	StringField ContactFunction {return null;}
	StringField ContactStatus{return null;}
	
	//-- Localizzazione e Comunicazione
	StringField ContactStreetAddress{return null;}
	StringField ContactStreetCity{return null;}
	StringField ContactProvince{return null;}
	StringField ContactCap{return null;}
	StringField ContactCountry{return null;}
	StringField ContactPhone{return null;}
	StringField ContactOfficePhone{ return null;}
	StringField ContactEmail{return null;}
	
	//-- Altre Info --
	StringField ContactAge{return null;}
	StringField ContactGender{return null;}
	StringField ContactNote{return null;}
	StringField NumContact{return null;}
	//StringField ContactAlways{return "always";}
	
	StringField TimeVisited{return null;}
	
	StringField searchKey {
		return ContactLastName + " " + ContactName;
	}
	
	Query getContacts() {
			return contactRows();
		}
		
		query contactRows<> {
			ascendingBy searchKey;
		}
	
	//retrieve all contacts ascending by timestamp of visiting
	Query getRecentContacts() {
		return recentContacts();
	}
		query recentContacts<> {
			where TimeVisited != null;
			where TimeVisited != "";
			descendingBy TimeVisited;
		}
		
	//Retrieve all contacts that start with a given letter	
	Query getContactStartsWith(String strStart){
			return ContactStartsWith(strStart);
		}
		query ContactStartsWith<String strStart>{
			where ContactLastName startsWith strStart; 
			ascendingBy searchKey;
		}
	
	Query getContactRow(String ContactId){
			return ContactRow(ContactId);
		}
		query ContactRow<String contactId>{
			where ContactId==contactId;
		}
	
	
	
	//retrieve contacts based on a search string and a related account
	Query getContactContainsFromAccount(String src, String acode) {
		return contactContainsFromAccount(src,acode);


	}
		query contactContainsFromAccount<String src, String acode> {

			where searchKey contains src;
			where RelAccountCode == acode;

			ascendingBy searchKey;
		}
	
	//Retrieve contacts based on a search string
	Query getContactContains(String src){
		return contactContains(src);
	}
		query contactContains<String src> {
			where searchKey contains src;
			ascendingBy searchKey;
		}
	
	//Retrieve contacts from the related Account
	Query getContactsFromAccount(String acode){
		return contactFromAccount(acode);



	}
		query contactFromAccount<String acode> {
			where RelAccountCode == acode;
			ascendingBy searchKey;
		}
	
	//Retrieve contacts that start with a given letter and related to a given account
	Query getContactStartsWithFromAccount(String letter, String acode) {
		return contactStartsWithFromAccount(letter,acode);


	}
		query contactStartsWithFromAccount<String letter, String acode> {
			where ContactLastName startsWith letter; 
			where RelAccountCode==acode;
			ascendingBy searchKey;
		}

	
	//Retrieve contacts that starts with a given letter and contains a given string
	Query getContactContainsStartsWith(String letter, String src) {
		return contactContainsStartsWith(letter,src);
	}
		query contactContainsStartsWith<String letter, String src> {
			where ContactLastName startsWith letter; 
			where searchKey contains src; 
			ascendingBy searchKey;
		}
		
	//Retrieve contacts that starts with a given letter, contains a given string and are related with an Account
	Query getContactContainsStartsWithFromAccount(String letter, String src, String acode) {
		return contactContainsStartsWithFromAccount(letter,src,acode);
	}
		query contactContainsStartsWithFromAccount<String letter, String src, String acode> {
			where RelAccountCode == acode;
			where ContactLastName startsWith letter; 
			where searchKey contains src;
			ascendingBy searchKey;
		}
	
	Query ContactCount(){
		return getContactCount();
	}
	query getContactCount<>{
		unique count NumContact;
	}
	
	Query getContactStartsWithHasValidAddress(String letter) {
		return contactStartsWithHasValidAddress(letter);
	}
		query contactStartsWithHasValidAddress<String letter> {
			where ContactLastName startsWith letter;
			where ContactStreetAddress != null;
			ascendingBy searchKey;
		}
		
	Query getContactContainsStartsWithHasValidAddress(String letter, String src) {
		return contactContainsStartsWithHasValidAddress(letter,src);
	}
		query contactContainsStartsWithHasValidAddress<String letter, String src> {
			where ContactLastName startsWith letter;
			where searchKey contains src;
			where ContactStreetAddress != null;
			ascendingBy searchKey;
		}
		
	Query getContactHasValidAddress() {
		return contactHasValidAddress();
	}
		query contactHasValidAddress<> {
			where ContactStreetAddress != null;
			where ContactStreetCity != null;
		}
}
