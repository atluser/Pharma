DataStoreObject {
	// Dettaglio Ordine
	StringField OrderId				{return null;}
	StringField OrderCode 			{return null;}
	DateField OrderDate 			{return Platform.createDate();}	
	StringField OrderType 			{return "Ordine di Vendita";}
	StringField AccountCode			{return null;}
	StringField AccountName			{return null;}//{return vObjUtil.getAccountName(AccountCode);}
	StringField OrderPriceList 		{return "Listino Base";}	
	StringField OrderStatus			{return null;}
	// Consegna e Pagamento
	DateField Order1stDeliveryDate 	{return null;}
	DateField Order2ndDeliveryDate 	{return null;}	
	DateField Order3rdDeliveryDate 	{return null;}	
	StringField OrderPaymentMode	{return null;}
	StringField OrderNote 			{return null;}	
	// Totali Ordine
	CurrencyField OrderTotalGross 	{return null;}//{return Platform.createDouble(vObjUtil.getOrderTotalGross(OrderCode));}
	CurrencyField OrderTotalNet 	{return null;}//{return Platform.createDouble(vObjUtil.getOrderTotalNet(OrderCode));}
	DoubleField OrderTotalDiscount 	{return null;}//{return Platform.createDouble(100.0*(1.0-OrderTotalNet.doubleValue()/OrderTotalGross.doubleValue()));}
	//Da Eliminare	
	StringField PromotionCode		{return null;}
	IntegerField PromotionMinQty	{return Platform.createInteger(0);}
	//
	
	Query getOrders() {
		return orderRows();
	}
	query orderRows<> {
		ascendingBy OrderCode;
	}
	
	Query getOrderRow(String orderCode){
		return orderRow(orderCode);
	}
	query orderRow<String orderCode>{
		where OrderCode==orderCode;
	}
	
	Query getOrderRowByAccountCode(String accountCode) {
		return orderRowByAccountCode(accountCode);
	}
	query orderRowByAccountCode<String accountCode>{
		where AccountCode==accountCode;
	}	

	Query getOrderContains(String str1){
		return orderContains1(str1);
	}
	query orderContains1<String str2> {
		where OrderCode contains str2;
		ascendingBy OrderCode;
	}
	
	Query getOrderContains(String str01, String str02){
		return orderContains(str01, str02);
	}
	query orderContains<String str01, String str02>{
		where AccountCode == str01;
		where OrderCode contains str02;
		ascendingBy OrderCode;
	}	
	
	query getOrder<String orderCode>{
		where OrderCode==orderCode;		
	
	}	
}
