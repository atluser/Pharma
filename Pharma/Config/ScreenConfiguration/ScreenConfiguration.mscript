UIObject {
	
	int getSectionNumber(String entity){
		Query q=cfgSections.getSections(entity);
		DataRowSet set=q.getRowSet();
		int section=set.getSize();
		appLog.log(Log.INFO,"sections in"+entity+section);		
		return section;
	}
	
	MultiRowSetModel createMultiRowSet(String Entity){
		MultiRowSetModel mrsm= new MultiRowSetModel(); 
		int NSECTION = getSectionNumber(Entity);					
		appLog.log(Log.INFO,"numero sezioni "+NSECTION);
		//costruisco il rowsetmodel
		for(int section=0;section<NSECTION;section++){
			RowSetModel rsm=new RowSetModel();
			//definisco la query x la sezione
			Query q=cfg.getFields(Entity,section);
			DataRowSet set=q.getRowSet();			
			appLog.log(Log.INFO,"numero field "+set.getSize()+" in section "+section);
			rsm.setRows(q);
			mrsm.add(rsm);
		}
		return mrsm;
	}
	
	void createSectionTitle(String entity){
		Query q=cfgSections.getSections(entity);
		DataRowSet rs=q.getRowSet();
		DataRow row=rs.first();
		ObjectArray sectionLabelArray=new ObjectArray();		
		while(row!=null){
			int group=cfgSections.Section.getIntegerValue(row).intValue();
			appLog.log(Log.INFO,"inserisco sezione "+group);
			String title=cfgSections.Title.getStringValue(row);
		//	Label label=new Label();
		//	label.setText(title);						
			sectionLabelArray.insertItem(group,title);
			row=rs.next();
		}
		sectionLabelMap.putValue(entity,sectionLabelArray);			
		
	}
		
}
