UIProject {
	Screens.StartScreen scrStart;
	Screens.HomeScreen scrHome;
	
	/*
	 * Logs
	 */
	Log logApp = getLog();
	Log appLog = getLog();
	
	/*
	 * Virtual objects
	 */
	CrmEntity vObjCrmEntity = new CrmEntity();
	//Account vObjAccount = new Account();
	
	/*********************************************
	LEGGO GLI OGGETTI PRESENTI NEL DATASTORE
	*********************************************/
	PharmaDP.DataStore dp = new PharmaDP.DataStore(); //istanzio il dataproject
	boolean sOpenDP = false;	//True = dataproject già aperto. False = Dataproject non aperto

	PharmaDP.DataStore.Account vObjAccount = null; //istanzio l'Account del dp
	PharmaDP.DataStore.Contact vObjContact = null; //istanzio i Contact del dp
		
	DataRowSet dpRowSetAccnt = null; //DataRowSet contenente gli account
	DataRow dpRowAccnt = null; //DataRow Account
	
	DataRowSet dpRowSetContact = null; //DataRowSet contenente i contatti
	DataRow dpRowContact = null; //DataRow contact
	
	//Contengono il numero di entità
	int iNumContacts 		= 0;
	int iNumAccounts 		= 0;
	int iNumEvents			= 0;
	int iNumListItem		= 0;
	int iNumListOfValue		= 0;
	int iNumOrder			= 0;
	int iNumOrderItem		= 0;
	int iNumPriceList		= 0;
	int iNumPriceListItem	= 0;
	int iNumProductList		= 0;
	int iNumProducts		= 0;
	
	
	
	//Contact vObjContact = new Contact();
	ListOfValues vObjLOV = new ListOfValues();
	Order vObjOrder=new Order();
	OrderItem vObjOrderItem=new OrderItem();
	ListItem vObjListItem=new ListItem();
	//PharmaDP.DataStore.PriceListItem vObjPriceListItem=dp.PriceListItem;
	PriceListItem vObjPriceListItem=new PriceListItem();
	PriceList vObjList=new PriceList();
	ProductList vObjProductList=new ProductList();
	PriceList vObjPriceList=new PriceList();
	Products vObjProducts=new Products();
	Event vObjEvent=new Event();
	//PharmaDP.DataStore.Products vObjProducts=dp.Products;
		
	/*
	 * VOUtility
	 */
	VOUtility vObjUtil = new VOUtility();
	Config.AccountConfig accountConfig=new Config.AccountConfig(); 
	Config.ContactConfig contactConfig=new Config.ContactConfig();
	Config.Field cfg=new Config.Field();
	Config.Sections cfgSections=new Config.Sections();
	
	ObjectMap fieldMap=new ObjectMap();	
	ObjectMap accountFieldMap=new ObjectMap();
	//ObjectArray sectionLabelArray=new ObjectArray();
	ObjectMap sectionLabelMap=new ObjectMap();
	
	//ProductImage
	ObjectMap productImageMap=new ObjectMap();
	
	String letter="A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z";
	List letterList=new List();
	
	callback onApplicationStyleSetup(StyleReceptor styleReceptor){
		
		if(Device.isIPad()) {
			Images.setDefault(Images.IPAD);
		} else if(Device.isAndroid()) {
			Images.setDefault(Images.ANDROID_X);
		}
		
	}

	callback onBarCodeScanned(String string_){
		//TODO: add code
	}

	callback onDayChanged(){
		//TODO: add code
	}

	callback onDeselect(){
		//TODO: add code
	}

	callback onError(ErrorSource errorSource, Error error){
		//TODO: add code
	}

	callback onLoggedIn(){
		//TODO: add code
	}

	callback onLoggedOut(int int_){
		//TODO: add code
	}

	callback onLoginCompleted(String string_){
		//TODO: add code
	}

	callback onLoginFailed(int int_, String string_){
		//TODO: add code
	}

	callback onLoginStarting(){
		//TODO: add code
	}

	callback onSelect(){
		//TODO: add code
	}

	callback onStart(PushedData pushedData){
		if(!dp.isOpened()){
			//sOpenDP=open(dp,Password.create(""),true);
			sOpenDP = open(dp, null, true); //Apro il dataproject
			vObjAccount = dp.Account; //istanzio l'Account del dp
			vObjContact = dp.Contact; //istanzio i Contact del dp
		
			//dpRowSetAccnt = vObjAccount.getRowSet(); //Recupero gli account presenti
		}	
		
		if(sOpenDP==true)
		{
			vObjUtil.loadAccount();
			vObjUtil.loadContact();
		}
		letterList=List.split(letter,";");
		vObjUtil.loadCrmEntities();
		vObjUtil.loadLOV();
		vObjUtil.loadProducts();
		//vObjUtil.loadListItem();
		vObjUtil.loadPriceList();
		vObjUtil.loadPriceListItem();
		vObjUtil.loadOrder();		
		vObjUtil.loadImage();
		vObjUtil.loadEvent();
		
		//test join
		appLog.log(Log.INFO,"LANCIO QUERY ");
		Query q=vObjProductList.getProductList2(vObjProducts,vObjPriceListItem,"");
		if(q!=null){
			DataRowSet rs=q.getRowSet();
			appLog.log(Log.INFO,"query OK");
			if(rs!=null){
				appLog.log(Log.INFO,"ROWSET not null");
				appLog.log(Log.INFO,"SIZE "+""+rs.getSize());
				DataRow row=q.getRowSet().first();
				String productName=vObjProductList.myProductName.getStringValue(row);
				appLog.log(Log.INFO,"PRODUCTNAME "+productName);
			}
			else appLog.log(Log.INFO,"rowset null ");
		
		}else 
			appLog.log(Log.INFO,"query is null");
		
		
		
		//configura account
		accountConfig.fillAccountConfig();
		//configura contact
		contactConfig.fillContactConfig();
		
		//configura stringhe sezione 
		Config.ScreenConfiguration config=new Config.ScreenConfiguration();
		config.createSectionTitle("Account");
		config.createSectionTitle("Contact");
		
		Screens.StartScreen scrStart = new Screens.StartScreen();
		//scrStart = getNewStartScreen();
		scrStart.push(Animation.NONE, false);
		//scrStart.push(Animation.NONE, false);
		scrStart.push(Animation.NONE, false);		
		//DataRow row=vObjUtil.getNewOrder("00100988");
		//Screens.OrderEntry.OrderHeaderScreen scrStart= new Screens.OrderEntry.OrderHeaderScreen();
		//scrStart.setData(row);
		
	}

	callback onStop(){
		if(sOpenDP==true)
			dp.saveData();
	}

	callback onUserChanged(){
		//TODO: add code
	}

	callback onUserInactivity(){
		//TODO: add code
	}
	

	
	/*
	 * Custom methods
	 */
	 /*
	Screens.StartScreen getNewStartScreen() {
		
		logApp.log(Log.INFO, "Pharma - getNewStartScreen()");
		
   		if (scrStart != null && scrStart.isValid()) {
   			scrStart.close();
   		}
   		scrStart = new Screens.StartScreen();
   		return scrStart;
   		
   		
   		 
   		
	}
	*/
	
}
