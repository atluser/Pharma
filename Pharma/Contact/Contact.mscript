VirtualObject {
	StringField ContactId{return null;}
	
	//-- Dati Anagrafici --
	StringField ContactName{return null;}
	StringField ContactLastName{return null;}
	
	//Relazione con Account Cliente
	StringField RelAccountCode{return null;}
	StringField RelAccountName{return vObjUtil.getAccountName(RelAccountCode);}
	
	StringField ContactTitle{return null;}
	StringField ContactFunction {return null;}
	StringField ContactStatus{return null;}
	
	//-- Localizzazione e Comunicazione
	StringField ContactStreetAddress{return null;}
	StringField ContactStreetCity{return null;}
	StringField ContactProvince{return null;}
	StringField ContactCap{return null;}
	StringField ContactCountry{return null;}
	StringField ContactPhone{return null;}
	StringField ContactOfficePhone{ return null;}
	StringField ContactEmail{return null;}
	
	//-- Altre Info --
	StringField ContactAge{return null;}
	StringField ContactGender{return null;}
	StringField ContactNote{return null;}
	
	
	Query getContacts() {
			return contactRows();
		}
		
		query contactRows<> {
			ascendingBy ContactLastName;
		}
		
	Query getContactStartsWith(String strStart){
			return ContactStartsWith(strStart);
		}
		query ContactStartsWith<String strStart>{
			where ContactLastName startsWith strStart; 
			ascendingBy ContactLastName;
		}
	
	Query getContactRow(String ContactId){
			return ContactRow(ContactId);
		}
		query ContactRow<String contactId>{
			where ContactId==contactId;
		}
	
	/*	
	Query getContactAccount(String str01) {
		return contactAccount(str01);
	}
		query contactAccount<String str01> {
			where RelAccountCode == str01;
			ascendingBy ContactLastName;
		}
		
	Query getContactRowByAccountCode(String letter, String accountCode) {
			return contactRowByAccountCode(letter,accountCode);
		}
		query contactRowByAccountCode<String letter, String accountCode>{
			where RelAccountCode==accountCode;
			where ContactLastName startsWith letter;
			ascendingBy ContactLastName;
		}	
	
	Query getContactContains(String letter, String str01, String str02){
			return contactContains(letter, str01, str02);
	}
		query contactContains<String letter, String str01, String str02>{
			where RelAccountCode == str01;
			where ContactLastName contains str02;
			where ContactLastName startsWith letter;
			ascendingBy ContactLastName;
		}	
	
	Query getContactContainsNoRel(String letter, String str01){
		return contactContainsNoRel(letter, str01);
	}
		query contactContainsNoRel<String letter, String str01>{
			where ContactLastName contains str01;
			where ContactLastName startsWith letter;
			ascendingBy ContactLastName;
		}
	*/
	
	//retrieve contacts based on a search string and a related account
	Query getContactContainsFromAccount(String src, String acode) {
		return contactContainsFromAccount(src,acode);
	}
		query contactContainsFromAccount<String src, String acode> {
			where ContactLastName contains src;
			where RelAccountCode == acode;
			ascendingBy ContactLastName;
		}
	
	//Retrieve contacts based on a search string
	Query getContactContains(String src){
		return contactContains(src);
	}
		query contactContains<String src> {
			where ContactLastName contains src;
			ascendingBy ContactLastName;
		}
	
	Query getContactsFromAccount(String acode){
		return contactFromAccount(acode);
	}
		query contactFromAccount<String acode> {
			where RelAccountCode == acode;
			ascendingBy ContactLastName;
		}
}
