TableViewCell {
	PictureBox picBox=new PictureBox();
	DataRow cellRow=null;
	
	Font fnt=new Font();
	
	Label  txtQuantity1=new Label ();		
	NumberFormatModel numMdlQuantity1 =new NumberFormatModel();	
	
	Label  txtQuantity2=new Label ();
	NumberFormatModel numMdlQuantity2 =new NumberFormatModel();
	Label  txtQuantity3=new Label ();
	NumberFormatModel numMdlQuantity3 =new NumberFormatModel();
	
	Label txtDiscount1=new Label ();
	NumberFormatModel numMdlDiscount1 =new NumberFormatModel();
	
	Label txtDiscount2=new Label ();
	NumberFormatModel numMdlDiscount2 =new NumberFormatModel();
	
	Label lblProductCode=new Label();
	Label lblName=new Label();		
	Label lblUnitPrice=new Label();
	Label lblTotal1=new Label();
	Label lblTotal2=new Label();	
	Label lblCategory=new Label();

	int ncol=8;

	Styles.FormStyle style = new Styles.FormStyle();
	callback applyVisualStyle(Widget widget, StyleReceptor styleReceptor){		
		styleReceptor.applyVisualStyle(style);
	}
	
	callback onCreate(Container container){
		fnt.setFamily("Arial");
		fnt.setSize(18);
				
		setBackground(Background.createVerticalGradientRectangleBackground(Color.create(255,255,255), Color.create(222,222,222)));
		//setFocusedBackground(Background.createVerticalGradientRectangleBackground(Color.create(230,0,0), Color.create(189,0,0)));
		appLog.log(Log.INFO,"NCOL "+ncol);						
		
		//altezza pannello
		setRowHeight(0,Sizing.PIXELS,60);
		setBackColor(Colors.White);
		add(picBox,"halign=center");
		add(lblProductCode,"halign=center");
		add(lblName,"halign=center");
		add(lblCategory,"halign=center");				
		add(lblUnitPrice,"halign=center");
		add(txtQuantity1,"halign=center");
		//add(txtQuantity2,"hfill=fill,halign=center");						
		//add(txtQuantity3,"hfill=fill,halign=center");
		add(txtDiscount1,"halign=center");
		add(txtDiscount2,"halign=center");
		//add(lblTotal1,"halign=center");
		//add(lblTotal2,"halign=center");
		
		for (int i=0;i<ncol;i++)						
			setColumnWidth(i, Sizing.PERCENTS, 100/ncol);
			
		setInsets (0, 8, 0, 8);
		setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgWhiteBackground, 0, 0, 0, 0));
		
		/*
		txtQuantity1.setDataModel(numMdlQuantity1);
		txtQuantity2.setDataModel(numMdlQuantity2);
		txtQuantity3.setDataModel(numMdlQuantity3);
		*/
		txtDiscount1.setDataModel(numMdlDiscount1);
		txtDiscount2.setDataModel(numMdlDiscount2);
		
		
		numMdlQuantity1.addField(dpObjOrderItem.OrderItemQty1);
		numMdlQuantity2.addField(dpObjOrderItem.OrderItemQty2);
		numMdlQuantity3.addField(dpObjOrderItem.OrderItemQty3);
		
		numMdlDiscount1.addField(dpObjOrderItem.OrderItemProductDiscount1);
		numMdlDiscount2.addField(dpObjOrderItem.OrderItemProductDiscount2);
			
		lblProductCode.setFont(fnt);
		lblProductCode.setForeColor(Colors.Black);	
		lblName.setFont(fnt);
		lblName.setForeColor(Colors.Black);
		lblCategory.setFont(fnt);
		lblCategory.setForeColor(Colors.Black);
		
		lblUnitPrice.setFont(fnt);
		lblUnitPrice.setForeColor(Colors.Black);
		txtQuantity1.setFont(fnt);
		txtQuantity1.setForeColor(Colors.Black);
		txtQuantity2.setFont(fnt);
		txtQuantity2.setForeColor(Colors.Black);
		txtQuantity3.setFont(fnt);
		txtQuantity3.setForeColor(Colors.Black);		
		txtDiscount1.setFont(fnt);
		txtDiscount1.setForeColor(Colors.Black);
		txtDiscount2.setFont(fnt);		
		txtDiscount2.setForeColor(Colors.Black);
		lblTotal1.setFont(fnt);
		lblTotal1.setForeColor(Colors.Black);
		lblTotal2.setFont(fnt);		
		lblTotal2.setForeColor(Colors.Black);				
	}
			
	void populateData(DataRow row, int grp){		
		String image=dpObjOrderItem.OrderItemProductImage.getStringValue(row);
		appLog.log(Log.INFO,"getting image "+image);
		ImageReference img=(ImageReference)productImageMap.getValue(image);
		appLog.log(Log.INFO,"setting image "+image);
		if(img!=null)	picBox.setImage(img);
		appLog.log(Log.INFO,"set image "+image);
					
		lblProductCode.setText(dpObjOrderItem.OrderItemProductCode.getStringValue(row));
		appLog.log(Log.INFO,"set productCode ");
		lblName.setText(dpObjOrderItem.OrderItemProductName.getStringValue(row));
		appLog.log(Log.INFO,"set productName ");
		Double unitPrice=dpObjOrderItem.OrderItemProductPrice.getCurrencyValue(row);
		if(unitPrice!=null)	lblUnitPrice.setText(unitPrice.toString());
		appLog.log(Log.INFO,"set productPrice ");
		/*
		
		lblTotal1.setText(dpObjOrderItem.OrderItemTotalGross.getCurrencyValue(row).toString());
		appLog.log(Log.INFO,"set total1 ");
		lblTotal2.setText(dpObjOrderItem.OrderItemTotalNet.getCurrencyValue(row).toString());
		appLog.log(Log.INFO,"set total2 ");
		
		*/
		lblCategory.setText(dpObjOrderItem.OrderItemProductCategory.getStringValue(row));
		/*
		
		Double TOT2=dpObjOrderItem.OrderItemTotalGross.getCurrencyValue(row);
		double tot2=0.0;
		if(TOT2!=null) tot2=TOT2.doubleValue();
		
		
		Double TOT1=dpObjOrderItem.OrderItemTotalNet.getCurrencyValue(row);
		double tot1=0.0;
		if(TOT1!=null) tot1=TOT1.doubleValue();
		
		int totQty=dpObjOrderItem.OrderItemTotalQty.getIntegerValue(row).intValue();
		*/
		switch(grp){			
			case 0:							
				txtQuantity1.setDataModel(numMdlQuantity1);
				/*
				int qty=dpObjOrderItem.OrderItemQty1.getIntegerValue(row).intValue();
				double tot=tot2/totQty*qty;				
				lblTotal1.setText(""+tot);				
				tot=tot1/totQty*qty;
				lblTotal2.setText(""+tot);
				*/
				break;
			case 1:
				txtQuantity1.setDataModel(numMdlQuantity2);
				break;
			case 2:
				txtQuantity1.setDataModel(numMdlQuantity3);
				break;		
		}
		
		
		setRow(row);		
			
	}
	
	void setRow(DataRow row){
		cellRow=row;
				
		numMdlQuantity1.setRow(row);
		numMdlQuantity2.setRow(row);
		numMdlQuantity3.setRow(row);
		
		numMdlDiscount1.setRow(row);
		numMdlDiscount2.setRow(row);
	}
		
	void setQty(Control c,IntegerAttribute att){
		TextField txtQuantity=(TextField) c;
		String qty=txtQuantity.getText();
		if(qty!=null && qty!="")		
			//dpObjListItem.Qty1.setIntegerValue(Platform.createInteger(qty),cellRow);
			att.setIntegerValue(Platform.createInteger(qty),cellRow);
		lblTotal1.setText(dpObjListItem.Total1.getCurrencyValue(cellRow).toString());
		lblTotal2.setText(dpObjListItem.Total2.getCurrencyValue(cellRow).toString());
	}
	
	
	void cleanQty(Control c){
		TextField txtQuantity=(TextField) c;
		String qty=txtQuantity.getText();
		if(qty=="0")		
			txtQuantity.setText("");
	}
	
	void setDiscount(Control c,DoubleAttribute att){
		TextField txtQuantity=(TextField) c;
		String qty=txtQuantity.getText();
		if(qty!=null && qty!="")		
			//dpObjListItem.Qty1.setIntegerValue(Platform.createInteger(qty),cellRow);
			att.setDoubleValue(Platform.createDouble(qty),cellRow);
		lblTotal1.setText(dpObjListItem.Total1.getCurrencyValue(cellRow).toString());
		lblTotal2.setText(dpObjListItem.Total2.getCurrencyValue(cellRow).toString());
	}
		
	
	callback txtQuantity1 onFocusLost(Control c){
		setQty(c,dpObjListItem.Qty1);
	
	}
	callback txtQuantity1 onFocusGained(Control c){
		cleanQty(c);
	}
	
	callback txtQuantity2 onFocusLost(Control c){
		setQty(c,dpObjListItem.Qty2);
	
	}
	callback txtQuantity2 onFocusGained(Control c){
		cleanQty(c);
	}
	
	callback txtQuantity3 onFocusLost(Control c){
		setQty(c,dpObjListItem.Qty3);
	
	}
	callback txtQuantity3 onFocusGained(Control c){
		cleanQty(c);
	}
	
	
	callback txtDiscount1 onFocusLost(Control c){
		setDiscount(c,dpObjListItem.Discount1);
	}
	callback txtDiscount1 onFocusGained(Control c){
		cleanQty(c);
	}
	callback txtDiscount2 onFocusLost(Control c){
		setDiscount(c,dpObjListItem.Discount2);
	}
	callback txtDiscount2 onFocusGained(Control c){
		cleanQty(c);
	}
	
}
