TableViewCell {
	
	Font fnt = new Font();
	Label lblCode = new Label();
	Label lblName=new Label();
	Label lblUOM=new Label();
	Label lblPrice=new Label();
	CheckBox picDiscount1=new CheckBox();
	CheckBox picDiscount2=new CheckBox();
	
	//PictureBox picBox=new PictureBox();
	BackgroundButton btnImage = new BackgroundButton();
	TablePanel pnlBtnImageCont = new TablePanel();
	Screens.PriceList.PriceListItemScreen scrPriceList;
	ImageReference img;
	 
	Label lblQtyMin=new Label();
	Label lblQtyMax=new Label();
	NumberFormatModel mdlPrice=new NumberFormatModel();
	/*
	CheckBoxModel picMdlDiscount1=new CheckBoxModel();
	CheckBoxModel picMdlDiscount2=new CheckBoxModel();
	*/
	HorizontalPanel hz=new HorizontalPanel();
	
	//TextModel txtMdl = new TextModel();
	Styles.FormStyle style = new Styles.FormStyle();
	String alignment="halign=center";
	int ncol=9;
	
	
	
	callback onCreate(Container container){

		fnt.setFamily("Arial");
		fnt.setSize(18);
		//fnt.setBold();
	//	lbl.setFont(fnt);
//		lbl.setForeColor(Colors.Black);
		//lbl.setFocusedForeColor(Colors.White);
		
		//txtMdl.setForeColor(Colors.Black);
		//txtMdl.setFocusedForeColor(Colors.White);
		//lbl.setDataModel(txtMdl);
		
		//set the table pnel wich contains the btnImage
		pnlBtnImageCont.setRowHeight(0,Sizing.PIXELS,50);
		pnlBtnImageCont.setColumnWidth(0,Sizing.PIXELS,50);
		pnlBtnImageCont.add(btnImage,"hfill=fill, vfill=fill");
		
		setLabel();
		//hz.add(picBox,alignment);
		hz.add(pnlBtnImageCont,"hfill=fill, vfill=fill, halign=center, valign=center");	
		hz.add(lblCode, alignment);
		hz.add(lblName, alignment);
		hz.add(lblUOM, alignment);
		hz.add(lblPrice, alignment);
		hz.add(picDiscount1, alignment);
		hz.add(picDiscount2, alignment);
		hz.add(lblQtyMin, alignment);
		hz.add(lblQtyMax, alignment);
		add(hz,"hfill=fill");
			
		setInsets (0, 8, 0, 8);
		setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgWhiteBackground, 0, 0, 0, 0));
		setFocusedBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgRedBackground, 0, 0, 0, 0));
			
		setRowHeight(0, Sizing.PREFERRED, 1);
		for (int i=0;i<ncol;i++)
			hz.setColumnWidth(i, Sizing.PERCENTS, 100/ncol);
		
	}
	
	
	
	callback applyVisualStyle(Widget widget, StyleReceptor styleReceptor){		
		styleReceptor.applyVisualStyle(style);
	}
	
	//Shows the popup with the item's zoomed image
	/* 
	callback picBox onClick(Control c) {
		appLog.log(Log.INFO,"PicBox Clicked - ImageRefernce: " );
		scrPriceList.showPopup(popZoom,Popup.POPUP_TYPE_FROM_BOTTOM, Sizing.PIXELS ,530 , Sizing.PREFERRED, 0,true,true);
	} */
	
	callback btnImage onClick(Control c) {
		appLog.log(Log.INFO,"PicBox Clicked - ImageRefernce: " );
		Popups.ZoomPopup popZoom = new Popups.ZoomPopup();
		popZoom.setImageReference(img);
		popZoom.setLabelName(lblName.getText());
		scrPriceList.showPopup(popZoom,Popup.POPUP_TYPE_FROM_BOTTOM, Sizing.PIXELS ,530 , Sizing.PREFERRED, 0,true,true);
	}
	
	
	void setLabel(){
		lblCode.setFont(fnt);
		lblCode.setForeColor(Colors.Black);
		lblName.setFont(fnt);
		lblName.setForeColor(Colors.Black);
		lblName.setWordWrapWidth (Sizing.PERCENTS,100/ncol);
		lblUOM.setFont(fnt);		
		lblUOM.setForeColor(Colors.Black);
		lblPrice.setFont(fnt);
		lblPrice.setForeColor(Colors.Black);
		lblQtyMin.setForeColor(Colors.Black);
		lblQtyMin.setFont(fnt);
		lblQtyMax.setForeColor(Colors.Black);
		lblQtyMax.setFont(fnt);
		
		picDiscount1.setDisabledForeColor(Colors.Green);
		picDiscount2.setDisabledForeColor(Colors.Green);
		picDiscount1.setEnabled(false);
		picDiscount2.setEnabled(false); 
		//picDiscount1.setDataModel(picMdlDiscount1);
		//picDiscount2.setDataModel(picMdlDiscount2);
		
		//picMdlDiscount1.setEditable(false);
		//picMdlDiscount2.setEditable(false);
		
		lblPrice.setDataModel(mdlPrice);
		mdlPrice.setPrecision(2);	
	}
	
	void setPriceListScreen(Screens.PriceList.PriceListItemScreen scr) {
		scrPriceList=scr;
	}
	
	void setImageReference(ImageReference ref) {
		img=ref;
	}

}
