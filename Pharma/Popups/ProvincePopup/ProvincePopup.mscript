Popup {
	TextModel mdlPickMap;
	BackgroundButton btnPopup;
	//String TITLE="HEADER";
	Label lblTitle=new Label();

	String TYPE="";
	
	/*
	 * Attributes
	 */
	StickyTable stk = new StickyTable();
	RowSetModel rsm = new RowSetModel();
	BackgroundButton btnClose=new BackgroundButton();
	
	//Panels.DetailStickyTablePanel pnlDetailForm;
	
	Panels.SearchHeaderHorizontalPanel pnlSearch = new Panels.SearchHeaderHorizontalPanel();
	SearchField tblSearch =pnlSearch.search;
	
	
	
	/*
	 * Callback methods
	 */
	callback onCreate(Container c) {
		//setRowHeight(0, Sizing.PREFERRED, 1);
		setRowHeight(2, Sizing.PREFERRED, 1);
		//setColumnWidth(0, Sizing.PREFERRED, 0);
		setColumnWidth(0, Sizing.PIXELS, 250);
		
		 setInsets (4,4,4,4);
		//TablePanel tp=new TablePanel();
		//tp.setInsets (8,8,8,8);
		stk.setGridLineThickness(1);
		stk.setGridLineStyle(LineStyle.SOLID);
		stk.setGridLineColor(Colors.Gray);						
						
		//rsm.setRows(vObjLOV.getLOV("PROVINCE"));						
		//set the model for the sticky table
		stk.setDataModel(rsm);
		
		//title panel
		Font titlefnt=new Font();
		titlefnt.setFamily("Arial");
		titlefnt.setSize(22);
		titlefnt.setBold();
		
		//action font
		Font actfnt=titlefnt.createCopy();
		actfnt.setSize(16);
		btnClose.setText("Close");		
		btnClose.setForeColor(Color.create(255,255,255));
		btnClose.setSpacing(8,8,8,8);
		//btnClose.setBackColor(Colors.Red);
		//btnClose.setBorder(Border.createRoundedBorder(Colors.Gray));
		btnClose.setBackground(Background.createColorRoundedBackground(Color.create(189,0,0),Colors.Gray,LineStyle.SOLID)) ;				
		lblTitle.setFont(titlefnt);
		lblTitle.setForeColor(Colors.Black);
		
		HorizontalPanel hzTitle=new HorizontalPanel();
		//hzTitle.setHGap(50);
		hzTitle.add(btnClose,"halign=left");
		hzTitle.add(lblTitle,"halign=center");
		hzTitle.setColumnWidth(0,Sizing.PREFERRED,0);
		hzTitle.setColumnWidth(1,Sizing.PREFERRED,1);
		
		add(hzTitle,"hfill=fill");
		
		startNewRow();
		
		//add header search
		//Panels.SearchHeaderHorizontalPanel search=new Panels.SearchHeaderHorizontalPanel();
		//tp.add(search,"hfill=fill");
		add(pnlSearch,"hfill=fill");
		//tp.startNewRow(); 
		startNewRow();
		
		//add sticky table to screen		
		//tp.add(stk, "hfill=fill,vfill=fill");			
		add(stk, "valign=top");
		//tp.setRowHeight(0, Sizing.PREFERRED, 0);
		//tp.setRowHeight(1, Sizing.PREFERRED, 0);
		//tp.setRowHeight(2, Sizing.PREFERRED, 1);
		//tp.setColumnWidth(2, Sizing.PIXELS, 300);
		
		//add(tp,"halign=center,vfill=fill,hfill=fill,colspan=2");		
		//setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgBlackBackground, 0, 0, 0, 0));
		setBackColor(Colors.BackgroundGray);
		
				
	}

	///////////////////////////////
	// Callback to configure cells
	///////////////////////////////
	callback stk onCellCreateInfo(TableView c, TableViewCellCreateInfo info, int group, int row){
		info.setPanel(new Cells.SimpleTableViewCell());
	}
	
	callback stk onCellInfo(TableView c , TableViewCell cell , Cell info , int grp , int row ){
		/* OK
		Panels.Accounts.AccountTableViewCell tblVwCell = (Panels.Accounts.AccountTableViewCell) cell;
		tblVwCell.setRow(info.getDataRow());
		*/
		Cells.SimpleTableViewCell tblVwCell = (Cells.SimpleTableViewCell)cell;
		
		DataRow dtRw = info.getDataRow();
		if(!dtRw.isDeleted()){		
			String str01 = vObjLOV.Value.getStringValue(dtRw);							
			tblVwCell.lbl.setText(str01);			
		}
	}
	
	callback stk onCellConfigure(TableView c, CellConfig cell, int group){
		cell.setHeight(Sizing.PREFERRED, 0);
		cell.setWidth(Sizing.PREFERRED, 0);
		cell.setCouldBeSelected(true);
	}
	
	callback stk onCellSize(TableView c, AbsoluteSize sizeInfo, int group, int row){
		sizeInfo.setHeight(60);
		sizeInfo.setWidth(200);
	}		
	
	callback stk onSelectionChanged ( TableView c , int group , int row ) {	
		//mdlChoice.setSelectedIndex(row);		
		//Cells.SimpleTableViewCell tblVwCell = (Cells.SimpleTableViewCell)cell;				
		btnPopup.setText(vObjLOV.Value.getStringValue(rsm.getRow()));
		mdlPickMap.setText(vObjLOV.Name.getStringValue(rsm.getRow()));
		hide(Popup.POPUP_TYPE_FROM_BOTTOM);
		btnPopup.refresh();
		
	}
		
	////////////////////////////
	// Sticky Header (Optional)
	////////////////////////////
	
	/*callback stk onHeaderCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		Cells.SectionHeaderCell pnl=new Cells.SectionHeaderCell();
		
		pnl.lbl.setText(strtitle);				
		
		info.setPanel(pnl);
	}
	
	callback stk onHeaderConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 60);
		cell.setWidth(Sizing.PREFERRED, 0);
	}
	
	callback stk onHeaderInfo(TableView c, TableViewPanel cell, Header info, int grp) {
		cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
			
		
	////////////////////////////
	// Footer (Optional)
	////////////////////////////
	/*
	callback stk onFooterCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		info.setPanel(new Panels.Accounts.AccountFooterTableViewPanel());
	}
	
	callback stk onFooterConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 60);
		cell.setWidth(Sizing.PERCENTS, 100);
	}
	
	callback stk onFooterInfo(TableView c, TableViewPanel cell, Footer info, int grp) {
		Panels.Accounts.AccountFooterTableViewPanel tblVwPanelFooter = (Panels.Accounts.AccountFooterTableViewPanel) cell;
		tblVwPanelFooter.setRowCount(rsm.getRowCount(0));
		//cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
	*/
	
	callback btnClose onClick(Control c){
		hide(Popup.POPUP_TYPE_FROM_BOTTOM);
	}
	
		//search callback
	callback tblSearch onValueChange ( Control c ) {
		//appLog.log(Log.INFO,"change");
		tblSearch.setOnValueChangingPausedDelay(500);
	}
	
	callback tblSearch onValueChangingPaused(Control c){
		//appLog.log(Log.INFO,"paused");
		//Query q=vObjAccount.getAccountContains(tblSearch.getText());
		executeQuery(tblSearch.getText());
		stk.reload();
	}
	
	/*
	 * Custom methods
	 */
	 
	 
	/*void setDetailPanel(Panels.DetailStickyTablePanel pnl) {
		pnlDetailForm = pnl;
	}*/
	
	void executeQuery(String val){
		rsm.setRows(vObjLOV.getLOVByVal(TYPE,val));
	}
	
	void setQuery(Query q){
		rsm.setRows(q);
	}
	
}
