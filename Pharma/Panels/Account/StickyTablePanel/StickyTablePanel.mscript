TablePanel {
	
	/*
	 * Attributes
	 */
	StickyTable stk = new StickyTable();
	DataRowArray arrRows = null;

	Panels.DetailPanel pnlDetail;
	Panels.Account.ReadOnlyDetailFormPanel pnlDetailForm;
	
	/*
	 * Callback methods
	 */
	callback onCreate(Container c) {		
					
		arrRows = new DataRowArray();
						
		setInitQuery();
	
		add(stk, "hfill=fill,valign=top");	
		
		//set size (note: this is required)
		setRowHeight(0, Sizing.PREFERRED, 1);
		
	}

	///////////////////////////////
	// Callback to configure cells
	///////////////////////////////
	callback stk onCellCreateInfo(TableView c, TableViewCellCreateInfo info, int group, int row){
		
		info.setPanel(new Cells.TwoRowsTableViewCell());
	
	}
	
	callback stk onCellInfo(TableView c , TableViewCell cell , Cell info , int grp , int row ){
		
		Cells.TwoRowsTableViewCell tblVwCell = (Cells.TwoRowsTableViewCell)cell;
			
		DataRow dtRowLoc = null;
		
		if(arrRows != null)
			dtRowLoc = arrRows.getItem(row);
		
		if(dtRowLoc == null) {
		
			return;
		
		} else {
			
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(0): " + dtRowLoc.getString(0));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(1): " + dtRowLoc.getString(1));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(2): " + dtRowLoc.getString(2));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(3): " + dtRowLoc.getString(3));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(4): " + dtRowLoc.getString(4));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(5): " + dtRowLoc.getString(5));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(6): " + dtRowLoc.getString(6));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(7): " + dtRowLoc.getString(7));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(8): " + dtRowLoc.getString(8));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(9): " + dtRowLoc.getString(9));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(10): " + dtRowLoc.getString(10));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(11): " + dtRowLoc.getString(11));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(12): " + dtRowLoc.getString(12));
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + grp + " - getString(13): " + dtRowLoc.getString(13));
				
			String str01 = dtRowLoc.getString(7);
			String str02 = dtRowLoc.getString(2) + " - " + dtRowLoc.getString(1) + " (" + dtRowLoc.getString(12) + ")";
			
			tblVwCell.lbl01.setText(str01);
			tblVwCell.lbl02.setText(str02);
		
		}
		
		dtRowLoc = null;
		
	}
	
	callback stk onCellConfigure(TableView c, CellConfig cell, int group){
		
		cell.setCouldBeSelected(true);
		cell.setHeight(Sizing.PREFERRED, 0);
		cell.setWidth(Sizing.PREFERRED, 0);
	
	}
	
	callback stk onCellSize(TableView c, AbsoluteSize sizeInfo, int group, int row){
		
		sizeInfo.setHeight(60);
		
	}		
	
	callback stk onSelectionChanged (TableView c , int group , int row) {	
		
		pnlDetail.setRow(arrRows.getItem(row));
		pnlDetailForm.setRow(arrRows.getItem(row));
		
	}
		
	////////////////////////////
	// Sticky Header (Optional)
	////////////////////////////
	callback stk onHeaderCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		
		Panels.Cells.SectionHeaderCell header = new Panels.Cells.SectionHeaderCell();
		header.lbl.setText(letterList.getItem(group));
		info.setPanel(header);
			
	}
	
	callback stk onHeaderConfigure(TableView c, CellConfig cell, int group) {
		
		cell.setHeight(Sizing.PIXELS, 30);
		cell.setWidth(Sizing.PERCENTS, 100);
	
	}
	
	callback stk onHeaderInfo(TableView c, TableViewPanel cell, Header info, int grp) {
			
	}
			
	////////////////////////////
	// Footer (Optional)
	////////////////////////////
	/*
	callback stk onFooterCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		info.setPanel(new Panels.Accounts.AccountFooterTableViewPanel());
	}
	
	callback stk onFooterConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 60);
		cell.setWidth(Sizing.PERCENTS, 100);
	}
	
	callback stk onFooterInfo(TableView c, TableViewPanel cell, Footer info, int grp) {
		Panels.Accounts.AccountFooterTableViewPanel tblVwPanelFooter = (Panels.Accounts.AccountFooterTableViewPanel) cell;
		tblVwPanelFooter.setRowCount(rsm.getRowCount(0));
		//cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
	*/
	
	/*
	 * Custom methods
	 */
	 
	/* 
	void setDetailPanel(Panels.DetailStickyTablePanel pnl) {
		pnlDetailForm = pnl;
	}
	*/
	void setDetailPanel(Panels.DetailPanel pnl) {
		pnlDetail = pnl;
	}
	
	void setDetailFormPanel(Panels.Account.ReadOnlyDetailFormPanel pnl) {
		pnlDetailForm = pnl;
	}
	
	void executeQuery(){
		//rsm.setRows(vObjAccount.getAccounts());
	}
	
	void setInitQuery(){
			
		//arrRows = new DataRowArray();		
		
		stk.setGridLineThickness(1);
		stk.setGridLineStyle(LineStyle.SOLID);
		stk.setGridLineColor(Colors.Gray);
		stk.setNumberOfGroups(letterList.length());
		
		for(int i = 0; i < letterList.length(); i++) {	
		//for(int i = 0; i < 1; i++) {
						
			//arrRows = new DataRowArray();
			DataRowSet rsLocRows = vObjAccount.getAccountStartsWith(letterList.getItem(i)).getRowSet();
			DataRow dtRowLoc = rsLocRows.first();

			while(dtRowLoc != null) {

				arrRows.addItem(dtRowLoc);
				dtRowLoc = rsLocRows.next();

			}

			stk.setNumberOfCellsInGroup (i, rsLocRows.getSize());
			appLog.log(Log.INFO, "StickyTablePanel - setInitQuery() - Group: " + i + " - Rows: " + rsLocRows.getSize());
			
		}
		
		stk.refresh();
				
	}
	
}