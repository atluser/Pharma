TablePanel {
	
	/*
	 * Attributes
	 */
	String sAccountCode = "";
	
	DataRow currentRow = null;
	 
	PictureBox picBox = new PictureBox();
	Label lbl01 = new Label();
	Label lbl02 = new Label();
	Label lbl03 = new Label();
	
	Label lblFormTitle01 = new Label();
	Label lblFormTitle02 = new Label();
	Label lblFormTitle03 = new Label();
	
	FormPanel pnlForm01 = new FormPanel();
	FormPanel pnlForm02 = new FormPanel();
	FormPanel pnlForm03 = new FormPanel();
	
	BackgroundButton btn00 = new BackgroundButton();
	BackgroundButton btn01 = new BackgroundButton();
	
	// Dettaglio Ordine
	Label lblFld01 = new Label();
	Label lblFld02 = new Label();
	Label lblFld03 = new Label();
	//Label lblFld04 = new Label();
	Link lblFld04 = new Link();
	Label lblFld05 = new Label();	
	Label lblFld06 = new Label();
	
	// Consegna e Pagamento
	Label lblFld07 = new Label();
	Label lblFld08 = new Label();
	Label lblFld09 = new Label();
	Label lblFld10 = new Label();
	Label lblFld11 = new Label();
	
	// Totali Ordine
	Label lblFld12 = new Label();
	Label lblFld13 = new Label();
	Label lblFld14 = new Label();
	
	int iNumberOfOrderItems = 0;
	
	TablePanel pnlBodyRoot = new TablePanel();
	
	Panels.HeaderPanel pnlHeader;
	
	/*
	 * Callback methods
	 */	
	callback onCreate(Container c) {
				
		setUpHeader();
		setUpForms();
		setUpButtons();
		
		// Header Panel
		TablePanel pnlHeaderRoot = new TablePanel();
		pnlHeaderRoot.add(picBox,"rowspan=2");
		pnlHeaderRoot.add(lbl01,"valign=bottom");
		pnlHeaderRoot.startNewRow();
		pnlHeaderRoot.add(lbl02,"valign=top");
		//pnlHeaderRoot.setInsets(0,48,0,0);
		//pnlHeaderRoot.setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgMasterBackground, 0, 0, 0, 0));
		pnlHeaderRoot.setColumnWidth(0, Sizing.PERCENTS, 10);
		pnlHeaderRoot.setColumnWidth(1, Sizing.PERCENTS, 50);
		pnlHeaderRoot.setRowHeight(0, Sizing.PREFERRED, 1);
		pnlHeaderRoot.setRowHeight(1, Sizing.PREFERRED, 1);
		
		TablePanel pnlHeader = new TablePanel();
		pnlHeader.add(pnlHeaderRoot,"halign=center,valign=top");
		pnlHeader.setColumnWidth(0, Sizing.PREFERRED, 1);
		
		/*
		TablePanel pnlHeader = new TablePanel();
		pnlHeader.add(picBox,"rowspan=2");
		pnlHeader.add(lbl01,"valign=bottom");
		pnlHeader.startNewRow();
		pnlHeader.add(lbl02,"valign=top");
		//pnlHeader.setInsets(0,48,0,0);
		pnlHeader.setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgMasterBackground, 0, 0, 0, 0));
		pnlHeader.setColumnWidth(0, Sizing.PREFERRED, 0);
		pnlHeader.setColumnWidth(1, Sizing.PREFERRED, 1);
		pnlHeader.setRowHeight(0, Sizing.PREFERRED, 1);
		pnlHeader.setRowHeight(1, Sizing.PREFERRED, 1);
		*/
		
		// Body Panel
		//TablePanel pnlBodyRoot = new TablePanel();
		pnlBodyRoot.add(new Separator(), "");
		pnlBodyRoot.startNewRow();
		setFormTitle(pnlBodyRoot, lblFormTitle01, "Dettaglio Ordine");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(pnlForm01,"hfill=fill,halign=center,valign=top");
		
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(new Separator(), "");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(btn00,"halign=right");
		
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(new Separator(), "");
		pnlBodyRoot.startNewRow();
		setFormTitle(pnlBodyRoot, lblFormTitle02, "Consegna e Pagamento");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(pnlForm02,"hfill=fill,halign=center,valign=top");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(new Separator(), "");
		pnlBodyRoot.startNewRow();
		setFormTitle(pnlBodyRoot, lblFormTitle03, "Totali Ordine");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(pnlForm03,"hfill=fill,halign=center,valign=top");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(new Separator(), "");
		pnlBodyRoot.startNewRow();
		setFormTitle(pnlBodyRoot, lbl03, "Elementi Correlati");
		pnlBodyRoot.startNewRow();
		pnlBodyRoot.add(btn01, "hfill=fill,halign=center,valign=top");
		
		pnlBodyRoot.enableScroll(true);
		//pnlBodyRoot.setInsets(48,0,0,0);
		//pnlBodyRoot.setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgDetailBackground, 0, 0, 0, 0));
		pnlBodyRoot.setColumnWidth(0, Sizing.PERCENTS, 60);
		
		pnlBodyRoot.setRowHeight(0, Sizing.PIXELS, 40);
		pnlBodyRoot.setRowHeight(1, Sizing.PREFERRED, 0);
		pnlBodyRoot.setRowHeight(2, Sizing.PREFERRED, 0);
		
		pnlBodyRoot.setRowHeight(3, Sizing.PIXELS, 8);
		pnlBodyRoot.setRowHeight(4, Sizing.PREFERRED, 0);
		
		pnlBodyRoot.setRowHeight(5, Sizing.PIXELS, 8);
		//pnlBodyRoot.setRowHeight(4, Sizing.PIXELS, 0);
		pnlBodyRoot.setRowHeight(6, Sizing.PREFERRED, 0);
		pnlBodyRoot.setRowHeight(7, Sizing.PREFERRED, 0);
		//pnlBodyRoot.setRowHeight(7, Sizing.PIXELS, 48);
		pnlBodyRoot.setRowHeight(8, Sizing.PIXELS, 0);
		pnlBodyRoot.setRowHeight(9, Sizing.PREFERRED, 0);
		pnlBodyRoot.setRowHeight(10, Sizing.PREFERRED, 0);
		//pnlBodyRoot.setRowHeight(10, Sizing.PIXELS, 48);
		pnlBodyRoot.setRowHeight(11, Sizing.PIXELS, 0);
		
		pnlBodyRoot.setRowHeight(12, Sizing.PREFERRED, 0);
		pnlBodyRoot.setRowHeight(13, Sizing.PREFERRED, 0);
		//pnlBodyRoot.setRowHeight(11, Sizing.PIXELS, 48);
		
		
		ScrollableTablePanel pnlBody = new ScrollableTablePanel();
		pnlBody.enableScroll(true);
		pnlBody.add(pnlBodyRoot,"halign=center,valign=top");
		pnlBody.setColumnWidth(0, Sizing.PREFERRED, 1);
		
		/*OK
		ScrollableTablePanel pnlBody = new ScrollableTablePanel();
		pnlBody.add(pnlForm01,"hfill=fill,halign=center,valign=top");
		pnlBody.startNewRow();
		pnlBody.add(new Separator(), "");
		pnlBody.startNewRow();
		pnlBody.add(pnlForm02,"hfill=fill,halign=center,valign=top");
		pnlBody.startNewRow();
		pnlBody.add(new Separator(), "");
		pnlBody.startNewRow();
		pnlBody.add(pnlForm03,"hfill=fill,halign=center,valign=top");
		
		pnlBody.enableScroll(true);
		//pnlBody.setInsets(48,48,48,48);
		pnlBody.setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgCellBackground_s, 0, 0, 0, 0));
		pnlBody.setColumnWidth(0, Sizing.PREFERRED, 1);
		pnlBody.setRowHeight(0, Sizing.PREFERRED, 0);
		pnlBody.setRowHeight(1, Sizing.PIXELS, 48);
		pnlBody.setRowHeight(2, Sizing.PREFERRED, 0);
		pnlBody.setRowHeight(3, Sizing.PIXELS, 48);
		pnlBody.setRowHeight(4, Sizing.PREFERRED, 0);
		*/
		
		add(pnlHeader,"hfill=fill,vfill=fill");
		startNewRow();
		add(pnlBody,"hfill=fill,vfill=fill");
		
		setInsets(48,0,48,0);
		setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgDetailBackground, 0, 0, 0, 0));
		setColumnWidth(0, Sizing.PREFERRED, 1);
		setRowHeight(0, Sizing.PREFERRED, 0);
		setRowHeight(1, Sizing.PREFERRED, 1);
		
		/*
		if(vObjOrder.getOrderContains("").getRowSet() != null && vObjOrder.getOrderContains("").getRowSet().getSize() > 0) {
			setRow(vObjOrder.getOrderContains("").getRowSet().first());
		}	
		*/
		/*
		if(sAccountCode != "") {
			if(vObjOrder.getOrderContains(sAccountCode,"").getRowSet() != null && vObjOrder.getOrderContains(sAccountCode,"").getRowSet().getSize() > 0) {
				setRow(vObjOrder.getOrderContains(sAccountCode,"").getRowSet().first());
			}		
		} else {
			if(vObjOrder.getOrderContains("").getRowSet() != null && vObjOrder.getOrderContains("").getRowSet().getSize() > 0) {
				setRow(vObjOrder.getOrderContains("").getRowSet().first());
			}		
		}
		*/
		
		
	}	
	
	callback btn00 onClick(Control c) {
		
		if(pnlForm02.isVisible() && pnlForm03.isVisible()) {
			//pnlBodyRoot.setRowHeight(4, Sizing.PIXELS, 0);
			lblFormTitle02.setVisible(false);
			pnlForm02.setVisible(false);
			pnlBodyRoot.setRowHeight(8, Sizing.PIXELS, 0);
			lblFormTitle03.setVisible(false);
			pnlForm03.setVisible(false);
			pnlBodyRoot.setRowHeight(11, Sizing.PIXELS, 0);
			btn00.setImage(Images.VodafoneImages.btn_more_info.getImage());
		} else {
			//pnlBodyRoot.setRowHeight(4, Sizing.PIXELS, 48);
			lblFormTitle02.setVisible(true);
			pnlForm02.setVisible(true);
			pnlBodyRoot.setRowHeight(8, Sizing.PIXELS, 48);
			lblFormTitle03.setVisible(true);
			pnlForm03.setVisible(true);
			pnlBodyRoot.setRowHeight(11, Sizing.PIXELS, 48);
			btn00.setImage(Images.VodafoneImages.btn_less_info.getImage());			
		}	
		
	}
	
	callback btn01 onClick(Control c) {
		logApp.log(Log.INFO, "ReadOnlyDeatilTablePanel - btn01 onClick()");
	}
	
	callback lblFld04 onClick(Control c) {
		logApp.log(Log.INFO, "ReadOnlyDeatilTablePanel - lblFld04 onClick()");
		
		RowSetModel rsm = new RowSetModel();
		rsm.setRows(vObjAccount.getAccountRow(sAccountCode));
		
		logApp.log(Log.INFO, "ReadOnlyDeatilTablePanel - lblFld04 onClick() - rowCount: " + rsm.getRowCount(0));
			
		if(rsm.getRowCount(0) > 0) {
	
			pnlHeader.rg.setSelectedIndex(0);
			pnlHeader.btnToolbarClick(0);
					
			pnlHeader.pnlAccountRoot.stk.tblSearch.setText(lblFld04.getText());
			pnlHeader.pnlAccountRoot.stk.executeQuery(lblFld04.getText());
			pnlHeader.pnlAccountRoot.stk.stk.reload();
			
			if (pnlHeader.pnlAccountRoot.stk.rsm.getRowCount(0)>0) {
				pnlHeader.pnlAccountRoot.stk.stk.select(0,0);
				//pnlHeader.pnlAccountRoot.pnlDetail.txtFldName.setText(vObjAccount.AccountName.getStringValue(pnlHeader.pnlAccountRoot.stk.rsm.getRow()));
				pnlHeader.pnlAccountRoot.pnlDetailForm.setRow(pnlHeader.pnlAccountRoot.stk.rsm.getRow());
			}
		
		}
		
		
	}
	
	/*
	 * Custom methods
	 */
	void setUpHeader() {
		
		Font fnt = new Font();
		fnt.setFamily("Arial");
		
		fnt.setSize(18);
		lbl02.setFont(fnt);
		lbl02.setForeColor(Colors.Black);

		fnt.setSize(22);
		fnt.setBold();
		lbl01.setFont(fnt);
		lbl01.setForeColor(Color.create(189,0,0));
	
		picBox.setImage(Images.VodafoneImages.ImgOrder.getImage());
	
	} 
	
	void setFormTitle(TablePanel pnl, Label lbl, String str) {
		
		Font fnt = new Font(); 
		fnt.setFamily("Arial");
		fnt.setSize(22);
		fnt.setBold();
	
		//Label lbl = new Label();
		lbl.setText(str);
		lbl.setFont(fnt);
		lbl.setForeColor(Color.create(189,0,0));
		
		pnl.add(lbl,"hfill=fill");
		
	}
	
	void setUpForms() {
		
		Font fnt = new Font();
		fnt.setFamily("Arial");
		fnt.setSize(20);
		
		lblFld01.setFont(fnt);
		lblFld01.setForeColor(Colors.Black);
		
		lblFld02.setFont(fnt);
		lblFld02.setForeColor(Colors.Black);
		
		lblFld03.setFont(fnt);
		lblFld03.setForeColor(Colors.Black);
		
		lblFld04.setFont(fnt);
		//lblFld04.setForeColor(Colors.Black);
		lblFld04.setForeColor(Colors.Blue);
		
		lblFld05.setFont(fnt);
		lblFld05.setForeColor(Colors.Black);
		
		lblFld06.setFont(fnt);
		lblFld06.setForeColor(Colors.Black);
		
		lblFld07.setFont(fnt);
		lblFld07.setForeColor(Colors.Black);
	
		lblFld08.setFont(fnt);
		lblFld08.setForeColor(Colors.Black);
		
		lblFld09.setFont(fnt);
		lblFld09.setForeColor(Colors.Black);
		
		lblFld10.setFont(fnt);
		lblFld10.setForeColor(Colors.Black);
		
		lblFld11.setFont(fnt);
		lblFld11.setForeColor(Colors.Black);
		lblFld11.setWordWrapWidth(Sizing.PERCENTS, 15);
		
		lblFld12.setFont(fnt);
		lblFld12.setForeColor(Colors.Black);

		lblFld13.setFont(fnt);
		lblFld13.setForeColor(Colors.Black);

		lblFld14.setFont(fnt);
		lblFld14.setForeColor(Colors.Black);		
		
		fnt.setBold();
	
		Label lbl01 = new Label();
		lbl01.setText("Nr. Ordine");
		lbl01.setFont(fnt);
		lbl01.setForeColor(Colors.Black);
		pnlForm01.add(lbl01, "halign=right", lblFld01, "halign=left,hfill=fill");
		
		Label lbl02 = new Label();
		lbl02.setText("Data Ordine");
		lbl02.setFont(fnt);
		lbl02.setForeColor(Colors.Black);
		pnlForm01.add(lbl02, "halign=right", lblFld02, "halign=left,hfill=fill");
		
		Label lbl03 = new Label();
		lbl03.setText("Tipo");
		lbl03.setFont(fnt);
		lbl03.setForeColor(Colors.Black);
		pnlForm01.add(lbl03, "halign=right", lblFld03, "halign=left,hfill=fill");
		
		Label lbl04 = new Label();
		lbl04.setText("Cliente");
		lbl04.setFont(fnt);
		lbl04.setForeColor(Colors.Black);
		pnlForm01.add(lbl04, "halign=right", lblFld04, "halign=left,hfill=fill");
	
		Label lbl05 = new Label();
		lbl05.setText("Listino");
		lbl05.setFont(fnt);
		lbl05.setForeColor(Colors.Black);
		pnlForm01.add(lbl05, "halign=right", lblFld05, "halign=left,hfill=fill");
		
		Label lbl06 = new Label();
		lbl06.setText("Stato");
		lbl06.setFont(fnt);
		lbl06.setForeColor(Colors.Black);
		pnlForm01.add(lbl06, "halign=right", lblFld06, "halign=left,hfill=fill");
		
		pnlForm01.setInsets(8,8,8,8);
		pnlForm01.setBackground(Background.createColorRoundedBackground(Colors.BackgroundGray));
		pnlForm01.setLabelColumnWidth(Sizing.PERCENTS, 30);
		pnlForm01.setControlColumnWidth(Sizing.PREFERRED, 1);
		
		Label lbl07 = new Label();
		lbl07.setText("Prima Consegna");
		lbl07.setFont(fnt);
		lbl07.setForeColor(Colors.Black);
		pnlForm02.add(lbl07, "halign=right", lblFld07, "halign=left,hfill=fill");
		
		Label lbl08 = new Label();
		lbl08.setText("Seconda Consegna");
		lbl08.setFont(fnt);
		lbl08.setForeColor(Colors.Black);
		pnlForm02.add(lbl08, "halign=right", lblFld08, "halign=left,hfill=fill");
		
		Label lbl09 = new Label();
		lbl09.setText("Terza Consegna");
		lbl09.setFont(fnt);
		lbl09.setForeColor(Colors.Black);
		pnlForm02.add(lbl09, "halign=right", lblFld09, "halign=left,hfill=fill");
		
		Label lbl10 = new Label();
		lbl10.setText("Metodo di Pagamento");
		lbl10.setFont(fnt);
		lbl10.setForeColor(Colors.Black);
		pnlForm02.add(lbl10, "halign=right", lblFld10, "halign=left,hfill=fill");
		
		Label lbl11 = new Label();
		lbl11.setText("Note");
		lbl11.setFont(fnt);
		lbl11.setForeColor(Colors.Black);
		pnlForm02.add(lbl11, "halign=right,valign=top", lblFld11, "halign=left,hfill=fill");
		
		lblFormTitle02.setVisible(false);
		pnlForm02.setVisible(false);
		pnlForm02.setInsets(8,8,8,8);
		pnlForm02.setBackground(Background.createColorRoundedBackground(Colors.BackgroundGray));
		pnlForm02.setLabelColumnWidth(Sizing.PERCENTS, 30);
		pnlForm02.setControlColumnWidth(Sizing.PREFERRED, 1);

		Label lbl12 = new Label();
		lbl12.setText("Tot. Lordo");
		lbl12.setFont(fnt);
		lbl12.setForeColor(Colors.Black);
		pnlForm03.add(lbl12, "halign=right", lblFld12, "halign=left,hfill=fill");
		
		Label lbl13 = new Label();
		lbl13.setText("Tot. Netto");
		lbl13.setFont(fnt);
		lbl13.setForeColor(Colors.Black);
		pnlForm03.add(lbl13, "halign=right", lblFld13, "halign=left,hfill=fill");
		
		Label lbl14 = new Label();
		lbl14.setText("Tot. Sconto");
		lbl14.setFont(fnt);
		lbl14.setForeColor(Colors.Black);
		pnlForm03.add(lbl14, "halign=right", lblFld14, "halign=left,hfill=fill");	
		
		lblFormTitle03.setVisible(false);
		pnlForm03.setVisible(false);
		pnlForm03.setInsets(8,8,8,8);
		pnlForm03.setBackground(Background.createColorRoundedBackground(Colors.BackgroundGray));
		pnlForm03.setLabelColumnWidth(Sizing.PERCENTS, 30);
		pnlForm03.setControlColumnWidth(Sizing.PREFERRED, 1);			

	}
	 
	void setUpButtons() {
		
		Font fnt = new Font();
		fnt.setSize(20);
		fnt.setFamily("Arial");
		fnt.setBold();
		
		btn00.setImage(Images.VodafoneImages.btn_more_info.getImage());
		
		btn01.setFont(fnt);
		btn01.setText(StringConstants.TBB_ORDER_ITEMS_STR.getString() + " (" + iNumberOfOrderItems + ")");
		//btn01.setText("Contatti");
		btn01.setLeftSpacing(56);
		btn01.setForeColor(Colors.Black);
		btn01.setFocusedForeColor(Colors.Black);
		btn01.setBackground(Background.create9PartImageRectangleBackground(Images.VodafoneImages.ImgOrderItemsList, 50, 30, 0, 0));
		btn01.setFocusedBackground(Background.create9PartImageRectangleBackground(Images.VodafoneImages.ImgOrderItemsList, 50, 30, 0, 0));
		//btn01.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);
		
	} 
	 
	String getFormattedDate(DateAttribute dtAtt, DataRow dtRw) {
		
		/*
		Date startDate=vObjPriceList.PriceListStartDate.getDateValue(dtRw);
		int m=startDate.month();
		int d=startDate.day();
		int y=startDate.year();
		strStartDate=""+d+"/"+m+"/"+y;
		*/
		
		DateFormatModel dtFormat = new DateFormatModel();
		dtFormat.setStyle(DateStyles.DATE_MEDIUM);
		dtFormat.addField(dtAtt);
		dtFormat.setRow(dtRw);
		
		return dtFormat.getText();
		
	} 
	 
	void setRow(DataRow dtRw) {
		
		sAccountCode = (vObjOrder.AccountCode.getStringValue(dtRw) != null) ? vObjOrder.AccountCode.getStringValue(dtRw) : "";
		
		String str01 = (vObjOrder.OrderCode.getStringValue(dtRw) != null) ? vObjOrder.OrderCode.getStringValue(dtRw) : "Data not found!";
		String str02 = (vObjOrder.OrderDate.getDateValue(dtRw) != null) ? vObjOrder.OrderDate.getDateValue(dtRw).toString() : "Data not found!";
		String str03 = (vObjOrder.OrderType.getStringValue(dtRw) != null) ? vObjOrder.OrderType.getStringValue(dtRw) : "Data not found!";
		String str04 = (vObjOrder.AccountName.getStringValue(dtRw) != null) ? vObjOrder.AccountName.getStringValue(dtRw) : "Data not found!";
		String str05 = (vObjOrder.OrderPriceList.getStringValue(dtRw) != null) ? vObjOrder.OrderPriceList.getStringValue(dtRw) : "Data not found!";
		String str06 = (vObjOrder.OrderStatus.getStringValue(dtRw) != null) ? vObjOrder.OrderStatus.getStringValue(dtRw) : "Data not found!";
		
		String str07 = (vObjOrder.Order1stDeliveryDate.getDateValue(dtRw) != null) ? vObjOrder.Order1stDeliveryDate.getDateValue(dtRw).toString() : "Data not found!";
		String str08 = (vObjOrder.Order2ndDeliveryDate.getDateValue(dtRw) != null) ? vObjOrder.Order2ndDeliveryDate.getDateValue(dtRw).toString() : "Data not found!";
		String str09= (vObjOrder.Order3rdDeliveryDate.getDateValue(dtRw) != null) ? vObjOrder.Order3rdDeliveryDate.getDateValue(dtRw).toString() : "Data not found!";
		String str10 = (vObjOrder.OrderPaymentMode.getStringValue(dtRw) != null) ? vObjOrder.OrderPaymentMode.getStringValue(dtRw) : "Data not found!";
		String str11 = (vObjOrder.OrderNote.getStringValue(dtRw) != null) ? vObjOrder.OrderNote.getStringValue(dtRw) : "Data not found!";
		
		String str12 = (vObjOrder.OrderTotalGross.getCurrencyValue(dtRw) != null) ? vObjOrder.OrderTotalGross.getCurrencyValue(dtRw).toString() : "Data not found!";
		String str13 = (vObjOrder.OrderTotalNet.getCurrencyValue(dtRw) != null) ? vObjOrder.OrderTotalNet.getCurrencyValue(dtRw).toString() : "Data not found!";
		String str14 = (vObjOrder.OrderTotalDiscount.getDoubleValue(dtRw) != null) ? vObjOrder.OrderTotalDiscount.getDoubleValue(dtRw).toString() : "Data not found!";
		
		currentRow = dtRw;	
		
		/* DA VERIFICARE
		if(vObjOrderItem.getOrderItemsByOrderCode(str01).getRowSet() != null)
			iNumberOfOrderItems = vObjOrderItem.getOrderItemsByOrderCode(str01).getRowSet().getSize();
			btn01.setText(StringConstants.TBB_ORDER_ITEMS_STR.getString() + " (" + iNumberOfOrderItems + ")");
		*/
				
		if(vObjOrder.OrderDate.getDateValue(dtRw) != null) {
			str02 = getFormattedDate(vObjOrder.OrderDate, dtRw);	
		}
		
		if(vObjOrder.Order1stDeliveryDate.getDateValue(dtRw) != null) {
			str07 = getFormattedDate(vObjOrder.Order1stDeliveryDate, dtRw);
		}
		
		if(vObjOrder.Order2ndDeliveryDate.getDateValue(dtRw) != null) {
			str08 = getFormattedDate(vObjOrder.Order2ndDeliveryDate, dtRw);
		}
		
		if(vObjOrder.Order3rdDeliveryDate.getDateValue(dtRw) != null) {
			str09 = getFormattedDate(vObjOrder.Order3rdDeliveryDate, dtRw);
		}
		
		lbl01.setText(str01);
		lbl02.setText(str02);
		
		lblFld01.setText(str01);
		lblFld02.setText(str02);
		lblFld03.setText(str03);
		lblFld04.setText(str04);
		lblFld05.setText(str05);
		lblFld06.setText(str06);
		
		lblFld07.setText(str07);
		lblFld08.setText(str08);
		lblFld09.setText(str09);
		lblFld10.setText(str10);
		lblFld11.setText(str11);
		
		lblFld12.setText(str12);
		lblFld13.setText(str13);
		lblFld14.setText(str14); 
		
	}

	void setAccountCode(String str) {
		sAccountCode = str;
	}
	
	String getAccountCode() {
		return sAccountCode;
	}
	
	void setFirstRecord() {
		
		if(sAccountCode != "") {
			if(vObjOrder.getOrderContains(sAccountCode,"").getRowSet() != null && vObjOrder.getOrderContains(sAccountCode,"").getRowSet().getSize() > 0) {
				setRow(vObjOrder.getOrderContains(sAccountCode,"").getRowSet().first());
			}		
		} else {
			if(vObjOrder.getOrderContains("").getRowSet() != null && vObjOrder.getOrderContains("").getRowSet().getSize() > 0) {
				setRow(vObjOrder.getOrderContains("").getRowSet().first());
			}		
		}
		
	}
	
	void setHeaderPanel(Panels.HeaderPanel pnl) {
		pnlHeader = pnl;
	}
	

}
