TablePanel {

	/*
	 * Attributes
	 */
	StickyTable stk = new StickyTable();
	//RowSetModel rsm = new RowSetModel();
	RowSetModel rsm=new RowSetModel();

	//Panels.DetailStickyTablePanel pnlDetailForm;
	//Panels.DetailPanel pnlDetail;
	ReadOnlyDetailTablePanel pnlDetailForm;
	Panels.SearchHeaderHorizontalPanel pnlSearch = new Panels.SearchHeaderHorizontalPanel();
	SearchField src = new SearchField();
	

	callback onCreate(Container c){
		
		//rsm.setRows(dpObjPriceList.createQuery());
		setQuery();
		
		stk.setDataModel(rsm);
		stk.setGridLineThickness(1);
		stk.setGridLineStyle(LineStyle.SOLID);
		stk.setGridLineColor(Colors.Gray);
		
		src.setTextHint("Search...");
		
		add(src,"hfill=fill");
		startNewRow(); 
		add(stk, "hfill=fill,vfill=fill");

		setInsets(8,8,8,8);
		setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgMasterBackground, 0, 0, 0, 0));
		
		setColumnWidth(0, Sizing.PREFERRED, 1);
		setRowHeight(0, Sizing.PREFERRED, 0);
		setRowHeight(1, Sizing.PREFERRED, 1);
	
	}

	///////////////////////////////
	// Callback to configure cells
	///////////////////////////////
	callback stk onCellCreateInfo(TableView c, TableViewCellCreateInfo info, int group, int row){
		info.setPanel(new Cells.TwoRowsTableViewCell());
	}
	
	callback stk onCellInfo(TableView c , TableViewCell cell , Cell info , int grp , int row ){
		/* OK
		Panels.Accounts.AccountTableViewCell tblVwCell = (Panels.Accounts.AccountTableViewCell) cell;
		tblVwCell.setRow(info.getDataRow());
		*/
		Cells.TwoRowsTableViewCell tblVwCell = (Cells.TwoRowsTableViewCell)cell;
		
		DataRow dtRw = info.getDataRow();
		if(!dtRw.isDeleted()){		
			String str01 = dpObjPriceList.PriceListName.getStringValue(dtRw);
			String str02 = dpObjPriceList.PriceListDescription.getStringValue(dtRw) ;//+ " - " + dpObjAccount.AccountCity.getStringValue(dtRw) + " - (" + dpObjAccount.AccountProvince.getStringValue(dtRw) + ")";					
	
			tblVwCell.lbl01.setText(str01);
			tblVwCell.lbl02.setText(str02);
		}
	}
	
	callback stk onCellConfigure(TableView c, CellConfig cell, int group){
		cell.setHeight(Sizing.PREFERRED, 0);
		cell.setWidth(Sizing.PREFERRED, 0);
		cell.setCouldBeSelected(true);
	}
	
	callback stk onCellSize(TableView c, AbsoluteSize sizeInfo, int group, int row){
		sizeInfo.setHeight(60);
	}		
	
	callback stk onSelectionChanged ( TableView c , int group , int row ) {	
		
		//pnlDetail.txtFldName.setText(dpObjPriceList.PriceListName.getStringValue(rsm.getRow()));
		pnlDetailForm.setRow(rsm.getRow());
		
	}
		
	////////////////////////////
	// Sticky Header (Optional)
	////////////////////////////
	/*	
	callback stk onHeaderCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		
		//appLog.log(Log.INFO, "StickyTablePanel - onHeaderCreateInfo() - getRowCount(" + group + "): " + rsm.getRowCount(group));
		
		//Panels.Cells.SectionHeaderCell header=new Panels.Cells.SectionHeaderCell();
		//if(rsm.getRowCount(group) > 0) {
			//appLog.log(Log.INFO, "StickyTablePanel - onHeaderCreateInfo() - getRowCount(" + group + "): " + rsm.getRowCount(group));
			Panels.Cells.SectionHeaderCell header=new Panels.Cells.SectionHeaderCell();
			//header.lbl.setText(letterList.getItem(group));
			info.setPanel(header);
		//}
		
	}
	
	callback stk onHeaderConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 30);
		//cell.setHeight(Sizing.PREFERRED, 0);
		cell.setWidth(Sizing.PERCENTS, 100);
	}
	
	callback stk onHeaderInfo(TableView c, TableViewPanel cell, Header info, int grp) {
	
			Panels.Cells.SectionHeaderCell header = (Panels.Cells.SectionHeaderCell)cell;
			header.lbl.setText(arr.getItem(grp));
	
		//cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
	*/
	
		//search callback
	callback src onValueChange ( Control c ) {
		//appLog.log(Log.INFO,"change");
		src.setOnValueChangingPausedDelay(500);
	}
	
	callback src onValueChangingPaused(Control c){
		//appLog.log(Log.INFO,"paused");		
		rsm.setRows(dpObjPriceList.getPriceList(src.getText()));
		stk.reload();
	}
	
			
	void setDetailPanel(Panels.DetailPanel pnl) {
	//	pnlDetail = pnl;
	}

	void setDetailFormPanel(ReadOnlyDetailFormPanel pnl) {
	//	pnlDetailForm = pnl;
	}

	void setQuery() {
		rsm.setRows(dpObjPriceList.createQuery());
	}

}