TablePanel {
	TextModel mdlPickMap;
	BackgroundButton btnPopup;
	String strtitle="HEADER";
	Popover po;
	String TYPE;
	
	
	
	/*
	 * Attributes
	 */
	StickyTable stk = new StickyTable();
	RowSetModel rsm = new RowSetModel();
	
	Panels.SearchHeaderHorizontalPanel search=new Panels.SearchHeaderHorizontalPanel();
	SearchField tblSearch=search.search;	
	
	//Panels.DetailStickyTablePanel pnlDetailForm;
	
	
	/*
	 * Callback methods
	 */
	callback onCreate(Container c) {
		//TablePanel tp=new TablePanel();
		
		stk.setGridLineThickness(1);
		stk.setGridLineStyle(LineStyle.SOLID);
		stk.setGridLineColor(Colors.Gray);						
		
		setRowHeight(0, Sizing.PREFERRED, 0);
		setRowHeight(1, Sizing.PREFERRED, 1);
		//setColumnWidth(0, Sizing.PREFERRED, 0);		
		//rsm.setRows(vObjLOV.getLOV("PROVINCE"));						
		//set the model for the sticky table
		stk.setDataModel(rsm);
		
		
		//add header search
		//Panels.SearchHeaderHorizontalPanel search=new Panels.SearchHeaderHorizontalPanel();		
		add(search,"hfill=fill");		
		startNewRow(); 
		
		//add sticky table to screen		
		//tp.add(stk, "valign=top,vfill=fill");			
		add(stk, "vfill=fill,hfill=fill");
		/*tp.setRowHeight(0, Sizing.PREFERRED, 0);
		tp.setRowHeight(1, Sizing.PREFERRED, 1);
		
		add(tp,"halign=center,vfill=fill,hfill=fill");		
		*/
		//setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgBlackBackground, 0, 0, 0, 0));
		//setBackColor(Colors.White);		
	}

	///////////////////////////////
	// Callback to configure cells
	///////////////////////////////
	callback stk onCellCreateInfo(TableView c, TableViewCellCreateInfo info, int group, int row){
		info.setPanel(new Cells.SimpleTableViewCell());
	}
	
	callback stk onCellInfo(TableView c , TableViewCell cell , Cell info , int grp , int row ){
		/* OK
		Panels.Accounts.AccountTableViewCell tblVwCell = (Panels.Accounts.AccountTableViewCell) cell;
		tblVwCell.setRow(info.getDataRow());
		*/
		Cells.SimpleTableViewCell tblVwCell = (Cells.SimpleTableViewCell)cell;
		
		DataRow dtRw = info.getDataRow();
		if(!dtRw.isDeleted()){		
			String str01 = vObjLOV.Value.getStringValue(dtRw);							
			tblVwCell.lbl.setText(str01);			
		}
	}
	
	callback stk onCellConfigure(TableView c, CellConfig cell, int group){
		cell.setHeight(Sizing.PREFERRED, 0);
		cell.setWidth(Sizing.PREFERRED, 0);
		cell.setCouldBeSelected(true);
	}
	
	callback stk onCellSize(TableView c, AbsoluteSize sizeInfo, int group, int row){
		sizeInfo.setHeight(60);
	}		
	
	callback stk onSelectionChanged ( TableView c , int group , int row ) {	
		//mdlChoice.setSelectedIndex(row);		
		//Cells.SimpleTableViewCell tblVwCell = (Cells.SimpleTableViewCell)cell;				
		btnPopup.setText(vObjLOV.Value.getStringValue(rsm.getRow()));
		mdlPickMap.setText(vObjLOV.Name.getStringValue(rsm.getRow()));
		po.dismiss();
		
		
	}
		
	////////////////////////////
	// Sticky Header (Optional)
	////////////////////////////
	/*
	callback stk onHeaderCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		Cells.SectionHeaderCell pnl=new Cells.SectionHeaderCell();
		
		pnl.lbl.setText(strtitle);				
		
		info.setPanel(pnl);
	}
	
	callback stk onHeaderConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 60);
		cell.setWidth(Sizing.PREFERRED, 0);
	}
	
	callback stk onHeaderInfo(TableView c, TableViewPanel cell, Header info, int grp) {
		cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
			
		
	////////////////////////////
	// Footer (Optional)
	////////////////////////////
	/*
	callback stk onFooterCreateInfo(TableView c, TableViewPanelCreateInfo info, int group){
		info.setPanel(new Panels.Accounts.AccountFooterTableViewPanel());
	}
	
	callback stk onFooterConfigure(TableView c, CellConfig cell, int group){
		cell.setCouldBeSelected(false);
		cell.setHeight(Sizing.PIXELS, 60);
		cell.setWidth(Sizing.PERCENTS, 100);
	}
	
	callback stk onFooterInfo(TableView c, TableViewPanel cell, Footer info, int grp) {
		Panels.Accounts.AccountFooterTableViewPanel tblVwPanelFooter = (Panels.Accounts.AccountFooterTableViewPanel) cell;
		tblVwPanelFooter.setRowCount(rsm.getRowCount(0));
		//cell.setBackground(Background.createVerticalGradientRectangleBackground(Colors.LightGray, Colors.LightGray));
	}
	*/
	//search callback
	callback tblSearch onValueChange ( Control c ) {
		//appLog.log(Log.INFO,"change");
		tblSearch.setOnValueChangingPausedDelay(1000);
	}
	
	callback tblSearch onValueChangingPaused(Control c){
		//appLog.log(Log.INFO,"paused");
		executeQuery(tblSearch.getText());
	}
	
	/*
	 * Custom methods
	 */
	 
	 
	/*void setDetailPanel(Panels.DetailStickyTablePanel pnl) {
		pnlDetailForm = pnl;
	}*/
	
	void executeQuery(String value){
		rsm.setRows(vObjLOV.getLOVByVal(TYPE,value));
	}
	
	void setQuery(Query q){
		rsm.setRows(q);
	}
	/*void init (RowSetModel rsm){
		//rsm.setRows(vObjLOV.getLOV("PROVINCE"));						
		//set the model for the sticky table
		stk.setDataModel(rsm);
		
	}*/
}
