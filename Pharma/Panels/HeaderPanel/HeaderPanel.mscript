HorizontalPanel {

	/*
	 * Attributes
	 */

	MessageBox msg=new MessageBox(); 

	int iTmpIdx = 4; 

	int currentEntity=0; 

	StackPanel stkPnl;
	Panels.Account.RootTablePanel pnlAccountRoot;
	Panels.Activity.RootTablePanel pnlActivityRoot;
	Panels.Contact.RootTablePanel pnlContactRoot;
	//Panels.Order.RootPanel pnlOrderRoot;
	Panels.Order.RootTablePanel pnlOrderRoot;
	Panels.ServiceRequest.RootPanel pnlServiceRequestRoot;
	Panels.Catalog.RootPanel pnlCatalogRoot;
	//Panels.PriceList.RootPanel pnlPriceListRoot;
	Panels.PriceList.RootTablePanel pnlPriceListRoot;
	Screens.HomeScreen scrHome;

	Button btnHome = new Button();

	RadioGroup rg = new RadioGroup();
	ToolBarButton tbb01 = new ToolBarButton();	
	ToolBarButton tbb02 = new ToolBarButton();
	ToolBarButton tbb03 = new ToolBarButton();
	ToolBarButton tbb04 = new ToolBarButton();	
	ToolBarButton tbb05 = new ToolBarButton();
	ToolBarButton tbb06 = new ToolBarButton();
	ToolBarButton tbb07 = new ToolBarButton();

	Button btnNew = new Button();
	Button btnEdit = new Button();
	Button btnDelete = new Button();
	Button btnCrmMenu = new Button();		
	Button btnMenu = new Button();

	Popover poMenu = new Popover();
	AnchorPosition apMenu = new AnchorPosition();

	Popover poCrmMenu = new Popover(); 
	AnchorPosition apCrmMenu = new AnchorPosition();
	//Action actPoCrmMenuClose = new Action();
	//Action actPoCrmMenuBack = new Action();	

	Popups.SectionFormPopup puNew = new Popups.SectionFormPopup();


	/*
	 * Callback methods
	 */ 
	callback onCreate(Container c) {

		setUpButtons();	
		//setUpMenuPopover();
		setUpCrmMenuPopover(c);
		setUpPopup();

		rg.addButton(tbb01);
		rg.addButton(tbb03);
		rg.addButton(tbb04);
		rg.addButton(tbb02);	
		rg.addButton(tbb05);
		rg.addButton(tbb06);
		rg.addButton(tbb07);
		rg.hideButton(4);
		rg.hideButton(5);
		rg.hideButton(6);
		rg.setSelectedIndex(0);
		rg.setNavigationType(ToolBar.SCROLLER);
		rg.setAlignmentIfExtraSpace(ToolBar.SCROLLER, HorizontalAlignmentType.CENTER);

		add(btnHome);
		add(rg,"hfill=fill");
		add(new Separator(),"");
		add(btnNew);
		add(btnEdit);
		add(btnDelete);
		add(btnCrmMenu);
		add(btnMenu);

	 	setBackground(Background.create9PartImageRectangleBackground(Images.VodafoneImages.img_actionbar_bg, 0, 0, 0, 0));
		setColumnWidth(0, Sizing.PREFERRED,0);
		setColumnWidth(1, Sizing.PREFERRED,0);
		setColumnWidth(2, Sizing.PREFERRED,1);
		setColumnWidth(3, Sizing.PREFERRED,0);
		setColumnWidth(4, Sizing.PREFERRED,0);
		setColumnWidth(5, Sizing.PREFERRED,0);
		setColumnWidth(6, Sizing.PREFERRED,0);
		setColumnWidth(7, Sizing.PREFERRED,0);

	}

	callback btnHome onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnHome onClick()");
		poCrmMenu.dismiss();

	}	

	callback rg onToolBarButtonClicked(ToolBar c, int idxClicked, ToolBarButton tbb, boolean isChanged) {

		logApp.log(Log.INFO, "HeaderPanel - rg onToolBarButtonClicked()");
		btnToolbarClick(idxClicked);		
	}


	callback btnNew onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnNew onClick()" + rg.getSelectedIndex());
		poCrmMenu.dismiss();
		//void showPopup ( Popup popup , int popupType , int heightType , int height , int widthType , int width , boolean showTitleBar , boolean useDeviceOrientation , Background screenOverlayBackground )
		//scrHome.showPopup(puNew, Popup.POPUP_TYPE_FROM_BOTTOM, Sizing.PREFERRED, 0, Sizing.PREFERRED, 0, false, true, Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgRedBackground, 0, 0, 0, 0));
		//scrHome.showPopup(puNew, Popup.POPUP_TYPE_FROM_BOTTOM, Sizing.PERCENTS, 100, Sizing.PERCENTS, 50, true);
		//scrHome.showPopup(puNew,false);


		//default account
		String entity="";//"Account";
		//VirtualObject obj=vObjAccount;
		DataRow row=null;//=vObjUtil.getNewAccountRow();
		StickyTable originStk=null;//=pnlAccountRoot.getStickyTable();
		//StickyTable detailStk=pnlAccountRoot.getDetailStickyTable();
		TablePanel pnlDetailForm=null;
		TablePanel stkTP=null;
		TablePanel pnlDetail=null;
		int currentEntitiy=rg.getSelectedIndex();
		switch(currentEntity){
			case 0:
				entity="Account";
				//obj=vObjAccount;
				row=vObjUtil.getNewAccountRow();
				originStk=pnlAccountRoot.getStickyTable();
				pnlDetailForm=pnlAccountRoot.pnlDetailForm;
				pnlDetail=pnlAccountRoot.pnlDetail;
				stkTP=pnlAccountRoot.stk;
				Screens.Account.EditScreen scrNewOrEditRecordAcc = new Screens.Account.EditScreen();
				scrNewOrEditRecordAcc.init(row,stkTP,pnlDetailForm,pnlDetail);
				scrNewOrEditRecordAcc.push(Animation.PUSH_FROM_BOTTOM, false);
			break;
			
			case 1:
				entity="Contact";
				//obj=vObjAccount;
				row=vObjUtil.getNewContactRow();
				originStk=pnlContactRoot.getStickyTable();
				pnlDetailForm=pnlContactRoot.pnlDetailForm;
				pnlDetail=pnlContactRoot.pnlDetail;
				stkTP=pnlContactRoot.stk;
				Screens.Contact.EditScreen scrNewOrEditRecordCon = new Screens.Contact.EditScreen();
				scrNewOrEditRecordCon.init(row,stkTP,pnlDetailForm, pnlDetail);
				scrNewOrEditRecordCon.push(Animation.PUSH_FROM_BOTTOM, false);
			break;
		}

		
	}



	callback btnEdit onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnEdit onClick()");
		poCrmMenu.dismiss();

			//default is account
		String entity="";
		//VirtualObject obj=vObjAccount;
		DataRow row=null;//pnlAccountRoot.getCurrentRow();
		StickyTable originStk=pnlAccountRoot.getStickyTable();
		TablePanel stkTP=null;
		TablePanel pnlDetailForm=null;
		TablePanel pnlDetail=null;
		//StickyTable detailStk=pnlAccountRoot.getDetailStickyTable();
		int currentEntitiy=rg.getSelectedIndex();
		switch(currentEntity){
			case 0:
				entity="Account";
				//obj=vObjAccount;
				//row=pnlAccountRoot.getCurrentRow();
				row=pnlAccountRoot.pnlDetailForm.currentRow;
				originStk=pnlAccountRoot.getStickyTable();
				stkTP=pnlAccountRoot.stk;
				pnlDetail=pnlAccountRoot.pnlDetail;
				//detailStk=pnlAccountRoot.getDetailStickyTable();
				pnlDetailForm=pnlAccountRoot.pnlDetailForm;
				Screens.Account.EditScreen scrNewOrEditRecordAcc = new Screens.Account.EditScreen();
				scrNewOrEditRecordAcc.init(row,stkTP,pnlDetailForm,pnlDetail);		
				scrNewOrEditRecordAcc.push(Animation.PUSH_FROM_BOTTOM, false);
			break;
			case 1:
				entity="Contact";
				//obj=vObjAccount;
				//row=pnlAccountRoot.getCurrentRow();
				row=pnlContactRoot.pnlDetailForm.currentRow;
				originStk=pnlContactRoot.getStickyTable();
				stkTP=pnlContactRoot.stk;
				pnlDetail=pnlContactRoot.pnlDetail;
				//detailStk=pnlAccountRoot.getDetailStickyTable();
				pnlDetailForm=pnlContactRoot.pnlDetailForm;
				Screens.Contact.EditScreen scrNewOrEditRecordCon = new Screens.Contact.EditScreen();
				scrNewOrEditRecordCon.init(row,stkTP,pnlDetailForm,pnlDetail);		
				scrNewOrEditRecordCon.push(Animation.PUSH_FROM_BOTTOM, false);
			break;
		}


	}	

	callback btnDelete onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnDelete onClick()");
		poCrmMenu.dismiss();				
		msg.ask ( 1 ,false , "ATTENZIONE!" , "Sei sicuro di cancellare il record?" , "OK" , "Cancel" );

	}	


 
	callback msg onDismissed ( MessageBox messageBox , int contextId , int dismissalType , int result , String value ){
		if(result==MessageBox.RESULT_OK){
			appLog.log(Log.INFO,"POPUP OK "+value);		
			int currentEntitiy=rg.getSelectedIndex();			
			switch(currentEntity){
				case 0:
					//Account								
					DataRow rowAcc=pnlAccountRoot.pnlDetailForm.currentRow;
					Panels.Account.StickyTablePanel stkTPAcc=pnlAccountRoot.stk;
					rowAcc.delete();
					stkTPAcc.setInitQuery();
					stkTPAcc.stk.scrollTo ( 0 , 0 , TableView.SCROLL_POSITION_NONE ); 
					stkTPAcc.stk.select(0,0);												
				break;
				case 1:
					//Contact								
					DataRow rowCon=pnlContactRoot.pnlDetailForm.currentRow;
					Panels.Contact.StickyTablePanel stkTPCon=pnlContactRoot.stk;
					rowCon.delete();
					stkTPCon.setQuery();
					stkTPCon.stk.scrollTo ( 0 , 0 , TableView.SCROLL_POSITION_NONE ); 
					stkTPCon.stk.select(0,0);												
				break;		
				
			}
		//	appLog.log(Log.INFO,"ROW "+row.isDeleted());						
		}
		else 
			appLog.log(Log.INFO,"POPUP CANCEL "+value);

	} 
 
 



	callback btnCrmMenu onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnCrmMenu onClick()");
		scrHome.showPopover(poCrmMenu, false, apCrmMenu);

	}

	callback btnMenu onClick(Control c) {

		logApp.log(Log.INFO, "HeaderPanel - btnMenu onClick()");
		poCrmMenu.dismiss();
		//puNew.hide(Popup.POPUP_TYPE_FROM_BOTTOM);
		//scrHome.showPopover(poMenu, false, apMenu);

	}

	callback poCrmMenu onDeactivate(Container source){
		logApp.log(Log.INFO, "HomePanel - poCrmMenu onDeactivate()");

	}

	callback poCrmMenu onDismiss(Screen owner, Popover popup){
		logApp.log(Log.INFO, "HomePanel - poCrmMenu onDismiss()");

	}	

	/*
	 * Custom methods
	 */
	void setUpButtons() {

		Font fnt = new Font();
		fnt.setSize(18);
		fnt.setFamily("Arial");
		//fnt.setBold();

		btnHome.setImage(Images.VodafoneImages.img_logo_vodafone.getImage());
		btnHome.setFocusedImage(Images.VodafoneImages.img_logo_vodafone.getImage());
		btnHome.setSelectedImage(Images.VodafoneImages.img_logo_vodafone.getImage());

		tbb01.setFont(fnt);
		tbb01.setText(StringConstants.TBB_ACCOUNTS_STR.getString());
		tbb01.setForeColor(Color.create(255,255,255));
		tbb01.setFocusedForeColor(Color.create(255,255,255));
		tbb01.setSelectedForeColor(Color.create(255,255,255));
		tbb01.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb01.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb01.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb01.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);

		tbb02.setFont(fnt);
		//tbb02.setText(StringConstants.TBB_ACTIVITIES_STR.getString());
		tbb02.setText(StringConstants.TBB_PRICELIST_STR.getString());
		tbb02.setForeColor(Color.create(255,255,255));
		tbb02.setFocusedForeColor(Color.create(255,255,255));
		tbb02.setSelectedForeColor(Color.create(255,255,255));
		tbb02.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb02.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb02.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb02.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);

		tbb03.setFont(fnt);
		tbb03.setText(StringConstants.TBB_CONTACTS_STR.getString());
		tbb03.setForeColor(Color.create(255,255,255));
		tbb03.setFocusedForeColor(Color.create(255,255,255));
		tbb03.setSelectedForeColor(Color.create(255,255,255));
		tbb03.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb03.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb03.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());		
		tbb03.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);				

		tbb04.setFont(fnt);
		tbb04.setText(StringConstants.TBB_ORDERS_STR.getString());
		tbb04.setForeColor(Color.create(255,255,255));
		tbb04.setFocusedForeColor(Color.create(255,255,255));
		tbb04.setSelectedForeColor(Color.create(255,255,255));
		tbb04.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb04.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb04.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());		
		tbb04.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);

		tbb05.setFont(fnt);
		tbb05.setText(StringConstants.TBB_CATALOG_STR.getString());
		tbb05.setForeColor(Color.create(255,255,255));
		tbb05.setFocusedForeColor(Color.create(255,255,255));
		tbb05.setSelectedForeColor(Color.create(255,255,255));
		tbb05.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb05.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb05.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());		
		tbb05.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);	

		tbb06.setFont(fnt);
		//tbb06.setText(StringConstants.TBB_PRICELIST_STR.getString());
		tbb06.setText(StringConstants.TBB_ACTIVITIES_STR.getString());
		tbb06.setForeColor(Color.create(255,255,255));
		tbb06.setFocusedForeColor(Color.create(255,255,255));
		tbb06.setSelectedForeColor(Color.create(255,255,255));
		tbb06.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb06.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb06.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());		
		tbb06.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);	

		tbb07.setFont(fnt);
		tbb07.setText(StringConstants.TBB_SERVICE_REQUESTS_STR.getString());
		tbb07.setForeColor(Color.create(255,255,255));
		tbb07.setFocusedForeColor(Color.create(255,255,255));
		tbb07.setSelectedForeColor(Color.create(255,255,255));
		tbb07.setImage(Images.VodafoneImages.tbb_normal.getImage());
		tbb07.setFocusedImage(Images.VodafoneImages.tbb_pressed.getImage());
		tbb07.setSelectedImage(Images.VodafoneImages.tbb_pressed.getImage());		
		tbb07.setHorizontalTextAlignment(HorizontalAlignmentType.CENTER);	

		btnNew.setImage(Images.VodafoneImages.btn_new_normal.getImage());
		btnNew.setFocusedImage(Images.VodafoneImages.btn_new_normal.getImage());
		btnNew.setSelectedImage(Images.VodafoneImages.btn_new_normal.getImage());

		btnEdit.setImage(Images.VodafoneImages.btn_edit_normal.getImage());
		btnEdit.setFocusedImage(Images.VodafoneImages.btn_edit_normal.getImage());
		btnEdit.setSelectedImage(Images.VodafoneImages.btn_edit_normal.getImage());

		btnDelete.setImage(Images.VodafoneImages.btn_delete_normal.getImage());
		btnDelete.setFocusedImage(Images.VodafoneImages.btn_delete_normal.getImage());
		btnDelete.setSelectedImage(Images.VodafoneImages.btn_delete_normal.getImage());						

		btnCrmMenu.setImage(Images.VodafoneImages.btn_menu_normal.getImage());
		btnCrmMenu.setFocusedImage(Images.VodafoneImages.btn_menu_normal.getImage());
		btnCrmMenu.setSelectedImage(Images.VodafoneImages.btn_menu_normal.getImage());

		btnMenu.setImage(Images.VodafoneImages.img_logo_atlantic.getImage());
		btnMenu.setFocusedImage(Images.VodafoneImages.img_logo_atlantic.getImage());
		btnMenu.setSelectedImage(Images.VodafoneImages.img_logo_atlantic.getImage());

	}

	void setUpMenuPopover() {

		logApp.log(Log.INFO, "HomePanel - setUpMenuPopover()");

		poMenu.setAutoDismiss(true);

		//Label lbl = new Label();
		//lbl.setText("Popover");
		Panels.CrmEntityPanel pnlCrmEntity = new Panels.CrmEntityPanel();			

		apMenu.setPositionType(AnchorPosition.HORIZONTAL_POSITION_RIGHT, AnchorPosition.VERTICAL_POSITION_TOP);
		apMenu.setAnchor(btnMenu);

		poMenu.setTitle("AAA");	
		//poCrmEntities.setBackground(Background.createVerticalGradientRectangleBackground(Colors.Green,Colors.Green));
		poMenu.setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgBlackBackground, 0, 0, 0, 0));
		poMenu.setSize(Sizing.PIXELS, 110, Sizing.PIXELS, 240);
		//poCrmEntities.add(lbl,"hfill=fill,vfill=fill");
		poMenu.add(pnlCrmEntity, "hfill=fill,vfill=fill");

	}

	void setUpCrmMenuPopover(Container c) {

		logApp.log(Log.INFO, "HomePanel - setUpMenuPopover()");

		Panels.CrmEntityPanel pnlCrmEntity = new Panels.CrmEntityPanel();			
		pnlCrmEntity.setHeaderPanel((Panels.HeaderPanel) c);


		//actPoCrmMenuClose.setText("Close");
		//actPoCrmMenuBack.setText("Back");						

//		apCrmMenu.setPositionType(AnchorPosition.HORIZONTAL_POSITION_RIGHT, AnchorPosition.VERTICAL_POSITION_TOP);
		apCrmMenu.setAnchor(btnCrmMenu);

		//poCrmMenu.setBlocking(true);
		poCrmMenu.setAutoDismiss(true);
		//poCrmMenu.setTitle("AAA");
		//poCrmMenu.setRightTitleBarAction(actPoCrmMenuClose);	
		poCrmMenu.setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgBlackBackground, 0, 0, 0, 0));
		poCrmMenu.setSize(Sizing.PIXELS, 160, Sizing.PIXELS, 240);
		poCrmMenu.add(pnlCrmEntity, "hfill=fill,vfill=fill");

	}	

	void setUpPopup() {

		Label lbl = new Label();
		lbl.setText("*** POPUP ***");
		//puNew.setTitle("AAA");



		Panels.EditStickyTablePanel pnl = new Panels.EditStickyTablePanel();
		DataRow dtRw =  vObjUtil.getNewAccountRow();
		pnl.init("Account", dtRw);

		//puNew.init(pnl, vObjAccount);

		//puNew.add(pnl, "halign=center,vfill=fill");
		//puNew.setBackground(Background.create9PartImageRectangleBackground(Images.PopoverImages.ImgRedBackground, 0, 0, 0, 0));	
		//puNew.setColumnWidth(0, Sizing.PERCENTS, 60);
		//puNew.setRowHeight(0, Sizing.PERCENTS, 100);

	}

	void setStackPanel(StackPanel stk){
		stkPnl = stk;	
	}

	void setAccountRootPanel(Panels.Account.RootTablePanel account){
		pnlAccountRoot = account;	
	}

	void setActivityRootPanel(Panels.Activity.RootTablePanel activity){
		pnlActivityRoot = activity;	
	}

	void setContactRootPanel(Panels.Contact.RootTablePanel contact){
		pnlContactRoot = contact;	
	}

	void setOrderRootPanel(Panels.Order.RootTablePanel order){
		pnlOrderRoot = order;	
	}		

	void setServiceRequestRootPanel(Panels.ServiceRequest.RootPanel service){
		pnlServiceRequestRoot = service;	
	}	

	void setCatalogRootPanel(Panels.Catalog.RootPanel catalog){
		pnlCatalogRoot = catalog;	
	}	

	void setHomeScreen(Screens.HomeScreen scr) {
		scrHome = scr;
	}

	void showToolbarButton(int idx) {

		if(!rg.isButtonHidden(iTmpIdx)) {
			rg.hideButton(iTmpIdx);
		}
		rg.showButton(idx);
		rg.setSelectedIndex(idx);
		iTmpIdx = idx;
		btnToolbarClick(idx);
		poCrmMenu.dismiss();
	}
	
	void btnToolbarClick(int idxClicked){
		currentEntity=idxClicked;
		if (idxClicked == 0) {

			poCrmMenu.dismiss();
			stkPnl.select(pnlAccountRoot);

		} else if (idxClicked == 1) {

			poCrmMenu.dismiss();
			//stkPnl.select(pnlActivityRoot);
			//stkPnl.select(pnlPriceListRoot);
			pnlContactRoot.pnlDetailForm.setFromAccountFlag(false);
			stkPnl.select(pnlContactRoot);
			//pnlContactRoot.refresh();
			pnlContactRoot.stk.stk.reload();

		} else if (idxClicked == 2) {

			poCrmMenu.dismiss();
			//stkPnl.select(pnlContactRoot);
			stkPnl.select(pnlOrderRoot);

		} else if (idxClicked == 3) {

			poCrmMenu.dismiss();
			//stkPnl.select(pnlOrderRoot);
			stkPnl.select(pnlPriceListRoot);

		} else if (idxClicked == 4) {

			poCrmMenu.dismiss();
			stkPnl.select(pnlCatalogRoot);

		} else if (idxClicked == 5) {

			poCrmMenu.dismiss();
			//stkPnl.select(pnlPriceListRoot);
			//appLog.log(Log.INFO,"PriceList");
			stkPnl.select(pnlActivityRoot);				

		} else if (idxClicked == 6) {
		//priceList
			poCrmMenu.dismiss();
			stkPnl.select(pnlServiceRequestRoot);

		}						
		
	}

}
