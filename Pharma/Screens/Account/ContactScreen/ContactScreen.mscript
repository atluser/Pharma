Screen {
	//DataRow currentRow;
	
	MessageBox msg = new MessageBox();
	
	Panels.Contact.StickyTablePanel stk = new Panels.Contact.StickyTablePanel();
	Panels.Contact.ReadOnlyDetailFormPanel pnlDetailForm = new Panels.Contact.ReadOnlyDetailFormPanel();
	Panels.DetailPanel pnlDetail = new Panels.DetailPanel();
	BorderPanel brdPanelRoot = new BorderPanel();
	
	Button btnHome = new Button();
	Button btnBack = new Button();
	Button btnNew = new Button();
	Button btnEdit = new Button();
	Button btnDelete = new Button();
	Button btnMenu = new Button();
	
	Label lbl01 = new Label();
	Label lbl02 = new Label();
	
	String sAccountCode = "";
	
	String fill = "hfill=fill, vfill=fill";
	
	callback applyVisualStyle(Widget widget, StyleReceptor styleReceptor){
		//Styles.FormStyle style = new Styles.FormStyle();
		//styleReceptor.applyVisualStyle(style);
	}

	callback onActivate(Container container){
		//TODO: add code
	}

	callback onBeginChangeFromFullScreen(Screen screen, Container container){
		//TODO: add code
	}

	callback onBeginChangeToFullScreen(Screen screen, Container container){
		//TODO: add code
	}

	callback onClose(Container container){
		//TODO: add code
	}

	callback onCreate(Container container){
		
		setUpButtons();
		setUpLabels();
		
		// Header Panel
		HorizontalPanel pnlHeader = new HorizontalPanel();
		//pnlHeader.add(btnHome);
		pnlHeader.add(btnBack);
		pnlHeader.add(lbl01);
		pnlHeader.add(lbl02);
		pnlHeader.add(new Separator(), "");
		pnlHeader.add(btnNew);
		pnlHeader.add(btnEdit);
		pnlHeader.add(btnDelete);
		pnlHeader.add(btnMenu);
		pnlHeader.setBackground(Background.create9PartImageRectangleBackground(Images.VodafoneImages.img_actionbar_bg, 0, 0, 0, 0));

		//pnlHeader.setColumnWidth(0, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(0, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(1, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(2, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(3, Sizing.PREFERRED,1);
		pnlHeader.setColumnWidth(4, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(5, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(6, Sizing.PREFERRED,0);
		pnlHeader.setColumnWidth(7, Sizing.PREFERRED,0);
		
		Panels.MasterPanel pnlMaster = new Panels.MasterPanel();		 		
		pnlMaster.setContentPanel(stk);
		pnlDetailForm.setFromAccountFlag(true);
		pnlDetailForm.setContactScreen((Screens.Account.ContactScreen) container);
		pnlDetailForm.setFirstRecord();
		
		pnlDetail.setContentPanel(pnlDetailForm);	
		DataRow firstRow = dpObjContact.getContactsFromAccount(sAccountCode).getRowSet().first();
		pnlDetail.txtFldName.setText(dpObjContact.ContactName.getStringValue(firstRow) + " " + dpObjContact.ContactLastName.getStringValue(firstRow));		
		
		stk.setDetailPanel(pnlDetail);
		stk.setDetailFormPanel(pnlDetailForm);

		/*if(stk.rsm.hasMoreRows(0)){
		 stk.stk.scrollTo(0,0,TableView.SCROLL_POSITION_NONE);
		 stk.stk.select(0,0);
		}*/		
		
	 	
		
		// Root Panel
		TablePanel pnlRoot = new TablePanel();
		
		//set rootpanel dimensions and layout
		pnlRoot.setRowHeight(0,Sizing.PREFERRED,1);
		pnlRoot.setColumnWidth(0, Sizing.PIXELS, 350);
		pnlRoot.setColumnWidth(1, Sizing.PREFERRED, 1);
		
		//adding  panesls to root panel
		pnlRoot.add(pnlMaster, fill);
	 	pnlRoot.add(pnlDetail, fill);
	 	pnlRoot.setBackground(Background.create9PartImageRectangleBackground(Images.SplitViewImages.ImgDetailBackground, 0, 0, 0, 0));
	 	
	 	//put the header and the root in the border panel
	 	brdPanelRoot.setNorth(pnlHeader);
	 	brdPanelRoot.setCenter(pnlRoot);
	 	
	 	add(brdPanelRoot, fill);
	 	
		/*pnlRoot.add(pnlHeader,"colspan=2,hfill=fill");
		pnlRoot.startNewRow();
		pnlRoot.add(pnlMaster,"hfill=fill,vfill=fill");
		pnlRoot.add(pnlDetail, "hfill=fill, vfill=fill");
		pnlRoot.add(pnlDetailForm,"hfill=fill,vfill=fill");
		pnlRoot.setColumnWidth(0, Sizing.PIXELS, 300);
		pnlRoot.setColumnWidth(1, Sizing.PREFERRED, 1);
		pnlRoot.setRowHeight(0, Sizing.PREFERRED, 0);	
		pnlRoot.setRowHeight(1, Sizing.PREFERRED, 1); 
		
		add(pnlRoot,"hfill=fill,vfill=fill");
		*/
		setRowHeight(0, Sizing.PREFERRED, 1);
	}

	callback onDeactivate(Container container){
		//TODO: add code
	}

	callback onEndChangeFromFullScreen(Screen screen, Container container){
		//TODO: add code
	}

	callback onEndChangeToFullScreen(Screen screen, Container container){
		//TODO: add code
	}

	callback onEndOrientationChange(Screen screen, int int_){
		//TODO: add code
	}

	callback onInputEvent(Screen screen, InputEvent inputEvent){
		//TODO: add code
	}

	callback onMenuDisplay(Screen screen){
		//TODO: add code
	}

	callback onOpen(Container container){
		//TODO: add code
	}

	callback onOrientationLayoutChange(Screen screen, int int_){
		//TODO: add code
	}

	callback onScreenKeyboardVisibilityChange(Screen screen, boolean boolean_){
		//TODO: add code
	}

	callback onScreenOrientationChange(Screen screen, int int_){
		//TODO: add code
	}

	callback onScreenOrientationChange(Screen screen, int int_, int int_1) {
		//TODO: add code
	}

	callback onStartOrientationChange(Screen screen, int int_) {
		//TODO: add code
	}

	callback btnHome onClick(Control c) {
		close(Animation.NONE);
	}
	
	callback btnBack onClick(Control c) {
		close(Animation.NONE);
	}
	
	callback btnNew onClick(Control c) {
		Screens.Contact.EditScreen scr=new Screens.Contact.EditScreen();
		scr.setAccountCode(sAccountCode);
		appLog.log(Log.INFO,"account code "+sAccountCode);
		DataRow row=vObjUtil.getNewContact(sAccountCode);
		scr.init(row,stk,pnlDetailForm,pnlDetail);
		scr.push(Animation.PUSH_FROM_BOTTOM,false); 
	}

	callback btnEdit onClick(Control c) {
		DataRow row=pnlDetailForm.currentRow;
		//originStk=pnlContactRoot.getStickyTable();
		//stkTP=pnlContactRoot.stk;
		//pnlDetail=pnlContactRoot.pnlDetail;
		//detailStk=pnlAccountRoot.getDetailStickyTable();
		//pnlDetailForm=pnlContactRoot.pnlDetailForm;
		Screens.Contact.EditScreen scr = new Screens.Contact.EditScreen();
		scr.init(row,stk,pnlDetailForm,pnlDetail);		
		scr.push(Animation.PUSH_FROM_BOTTOM, false);
	}		
	
	callback btnDelete onClick(Control c) {
		msg.ask ( 1 ,false , "ATTENZIONE!" , "Sei sicuro di cancellare i record?" , "OK" , "Cancel" );
	}
	
	callback msg onDismissed ( MessageBox messageBox , int contextId , int dismissalType , int result , String value ){
		DataRow rowCon=pnlDetailForm.currentRow;
		rowCon.delete();
		stk.setQuery();
		stk.stk.scrollTo ( 0 , 0 , TableView.SCROLL_POSITION_NONE ); 
		stk.stk.select(0,0);		
	}
	
	callback btnMenu onClick(Control c) {
		close(Animation.NONE);
	}
					

	/*
	 * Custom methods
	 */	 
	void setUpButtons() {
				
		btnHome.setImage(Images.VodafoneImages.img_logo_vodafone.getImage());
		btnHome.setFocusedImage(Images.VodafoneImages.img_logo_vodafone.getImage());
		btnHome.setSelectedImage(Images.VodafoneImages.img_logo_vodafone.getImage());	

		btnBack.setImage(Images.VodafoneImages.btn_back_normal.getImage());
		btnBack.setFocusedImage(Images.VodafoneImages.btn_back_normal.getImage());
		btnBack.setSelectedImage(Images.VodafoneImages.btn_back_normal.getImage());
		
		btnNew.setImage(Images.VodafoneImages.btn_new_normal.getImage());
		btnNew.setFocusedImage(Images.VodafoneImages.btn_new_normal.getImage());
		btnNew.setSelectedImage(Images.VodafoneImages.btn_new_normal.getImage());

		btnEdit.setImage(Images.VodafoneImages.btn_edit_normal.getImage());
		btnEdit.setFocusedImage(Images.VodafoneImages.btn_edit_normal.getImage());
		btnEdit.setSelectedImage(Images.VodafoneImages.btn_edit_normal.getImage());

		btnDelete.setImage(Images.VodafoneImages.btn_delete_normal.getImage());
		btnDelete.setFocusedImage(Images.VodafoneImages.btn_delete_normal.getImage());
		btnDelete.setSelectedImage(Images.VodafoneImages.btn_delete_normal.getImage());		

		btnMenu.setImage(Images.VodafoneImages.img_logo_atlantic.getImage());
		btnMenu.setFocusedImage(Images.VodafoneImages.img_logo_atlantic.getImage());
		btnMenu.setSelectedImage(Images.VodafoneImages.img_logo_atlantic.getImage());
	
	}
	
	void setUpLabels() {
		
		Font fnt01 = new Font();
		fnt01.setSize(24);
		fnt01.setFamily("Arial");
		//fnt01.setBold();
		
		Font fnt02 = new Font();
		fnt02.setSize(24);
		fnt02.setFamily("Arial");
		fnt02.setBold();
		
		//Label lbl = new Label();
		lbl01.setText(" Cliente: ");
		lbl01.setFont(fnt01);
		lbl01.setForeColor(Color.create(255,255,255));
	
		lbl02.setFont(fnt02);
		lbl02.setForeColor(Color.create(255,255,255));
	
	}
	
	void setAccountCode(String str) {
		sAccountCode = str;
	}
	
	String getAccountCode(String str) {
		return sAccountCode = str;
	}
	
}